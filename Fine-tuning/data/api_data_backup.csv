,api_specification
0,"{'openapi': '3.0.0', 'info': {'title': 'GQ Study Group API', 'version': '1.0.0', 'description': '학습 중심의 스터디 그룹 운영을 지원하는 API'}, 'servers': [{'url': 'https://api.gqservice.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/login': {'post': {'summary': '사용자 로그인', 'description': '사용자가 로그인합니다', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LoginRequest'}}}}, 'responses': {'200': {'description': '로그인 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LoginResponse'}}}}, '401': {'description': '잘못된 자격 증명', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/groups': {'post': {'summary': '스터디 그룹 생성', 'description': '새로운 스터디 그룹을 생성합니다', 'tags': ['Groups'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateGroupRequest'}}}}, 'responses': {'201': {'description': '스터디 그룹 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Group'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'get': {'summary': '스터디 그룹 목록 조회', 'description': '모든 스터디 그룹 목록을 조회합니다', 'tags': ['Groups'], 'responses': {'200': {'description': '스터디 그룹 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Group'}}}}}}}}, '/groups/{groupId}': {'get': {'summary': '특정 스터디 그룹 조회', 'description': '스터디 그룹 ID로 특정 그룹 정보를 조회합니다', 'tags': ['Groups'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 그룹 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스터디 그룹 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Group'}}}}, '404': {'description': '스터디 그룹을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '스터디 그룹에 참여', 'description': '스터디 그룹에 참여합니다', 'tags': ['Groups'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 그룹 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스터디 그룹 참여 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Group'}}}}, '404': {'description': '스터디 그룹을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/groups/{groupId}/quizzes': {'post': {'summary': '퀴즈 생성', 'description': '스터디 그룹 내에서 퀴즈를 생성합니다', 'tags': ['Quizzes'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 그룹 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateQuizRequest'}}}}, 'responses': {'201': {'description': '퀴즈 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Quiz'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/groups/{groupId}/announcements': {'post': {'summary': '공지사항 생성', 'description': '스터디 그룹 내에서 공지사항을 생성합니다', 'tags': ['Announcements'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 그룹 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateAnnouncementRequest'}}}}, 'responses': {'201': {'description': '공지사항 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Announcement'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/groups/{groupId}/assignments': {'post': {'summary': '과제 생성', 'description': '스터디 그룹 내에서 과제를 생성합니다', 'tags': ['Assignments'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 그룹 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateAssignmentRequest'}}}}, 'responses': {'201': {'description': '과제 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Assignment'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'username': {'type': 'string', 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['username', 'email', 'password'], 'properties': {'username': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'password': {'type': 'string', 'minLength': 8, 'example': 'password123'}}}, 'LoginRequest': {'type': 'object', 'required': ['username', 'password'], 'properties': {'username': {'type': 'string', 'example': 'john_doe'}, 'password': {'type': 'string', 'example': 'password123'}}}, 'LoginResponse': {'type': 'object', 'properties': {'token': {'type': 'string', 'example': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'}, 'user': {'$ref': '#/components/schemas/User'}}}, 'Group': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'Study Group 1'}, 'description': {'type': 'string', 'example': 'A group for studying Java'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateGroupRequest': {'type': 'object', 'required': ['name', 'description'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': 'Study Group 1'}, 'description': {'type': 'string', 'example': 'A group for studying Java'}}}, 'CreateQuizRequest': {'type': 'object', 'required': ['title', 'questions'], 'properties': {'title': {'type': 'string', 'example': 'Java Quiz'}, 'questions': {'type': 'array', 'items': {'type': 'object', 'properties': {'question': {'type': 'string', 'example': 'What is Java?'}, 'options': {'type': 'array', 'items': {'type': 'string', 'example': 'A programming language'}}, 'answer': {'type': 'string', 'example': 'A programming language'}}}}}}, 'Quiz': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': 'Java Quiz'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateAnnouncementRequest': {'type': 'object', 'required': ['title', 'content'], 'properties': {'title': {'type': 'string', 'example': 'Important Announcement'}, 'content': {'type': 'string', 'example': 'The next meeting will be held on Friday.'}}}, 'Announcement': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': 'Important Announcement'}, 'content': {'type': 'string', 'example': 'The next meeting will be held on Friday.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateAssignmentRequest': {'type': 'object', 'required': ['title', 'description'], 'properties': {'title': {'type': 'string', 'example': 'Java Assignment'}, 'description': {'type': 'string', 'example': 'Complete the Java exercises.'}}}, 'Assignment': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': 'Java Assignment'}, 'description': {'type': 'string', 'example': 'Complete the Java exercises.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
1,"{'openapi': '3.0.0', 'info': {'title': '기억박물관 API', 'version': '1.0.0', 'description': '치매 환자와 그 가족을 위한 기억 회복 웹사이트 API'}, 'servers': [{'url': 'https://api.memorymuseum.com/v1', 'description': 'Production server'}], 'paths': {'/memories': {'get': {'summary': '사용자의 기억 목록 조회', 'description': '사용자가 업로드한 모든 기억(사진)을 조회합니다.', 'tags': ['Memories'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '기억 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Memory'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 기억 추가', 'description': '사용자가 새로운 기억(사진)을 추가합니다.', 'tags': ['Memories'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateMemoryRequest'}}}}, 'responses': {'201': {'description': '기억 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Memory'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/memories/{memoryId}': {'get': {'summary': '특정 기억 조회', 'description': '기억 ID로 특정 기억 정보를 조회합니다.', 'tags': ['Memories'], 'parameters': [{'name': 'memoryId', 'in': 'path', 'required': True, 'description': '기억 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '기억 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Memory'}}}}}}, '404': {'description': '기억을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '기억 정보 수정', 'description': '기억 정보를 수정합니다.', 'tags': ['Memories'], 'parameters': [{'name': 'memoryId', 'in': 'path', 'required': True, 'description': '기억 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateMemoryRequest'}}}}, 'responses': {'200': {'description': '기억 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Memory'}}}}}}, '404': {'description': '기억을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '기억 삭제', 'description': '기억을 삭제합니다.', 'tags': ['Memories'], 'parameters': [{'name': 'memoryId', 'in': 'path', 'required': True, 'description': '기억 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '기억 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '기억이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '기억을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/memories/{memoryId}/comments': {'post': {'summary': '기억에 코멘트 추가', 'description': '기억에 대한 코멘트를 추가합니다.', 'tags': ['Comments'], 'parameters': [{'name': 'memoryId', 'in': 'path', 'required': True, 'description': '기억 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateCommentRequest'}}}}, 'responses': {'201': {'description': '코멘트 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Comment'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Memory': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'imageUrl': {'type': 'string', 'format': 'uri', 'example': 'https://example.com/image.jpg'}, 'description': {'type': 'string', 'example': '가족과의 소중한 순간'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateMemoryRequest': {'type': 'object', 'required': ['imageUrl', 'description'], 'properties': {'imageUrl': {'type': 'string', 'format': 'uri', 'example': 'https://example.com/image.jpg'}, 'description': {'type': 'string', 'example': '가족과의 소중한 순간'}}}, 'UpdateMemoryRequest': {'type': 'object', 'properties': {'description': {'type': 'string', 'example': '가족과의 소중한 순간 수정'}}}, 'Comment': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'memoryId': {'type': 'integer', 'example': 1}, 'content': {'type': 'string', 'example': '정말 행복한 순간이었어요!'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateCommentRequest': {'type': 'object', 'required': ['content'], 'properties': {'content': {'type': 'string', 'example': '정말 행복한 순간이었어요!'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
2,"{'openapi': '3.0.0', 'info': {'title': '1인 가구 맞춤형 플랫폼 API', 'version': '1.0.0', 'description': '1인 가구를 위한 커뮤니티 및 서비스 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/posts': {'get': {'summary': '주변 사용자 글 목록 조회', 'description': '100m 이내의 사용자들이 작성한 글 목록을 조회합니다.', 'tags': ['Posts'], 'parameters': [{'name': 'latitude', 'in': 'query', 'description': '사용자의 위도', 'required': True, 'schema': {'type': 'number'}}, {'name': 'longitude', 'in': 'query', 'description': '사용자의 경도', 'required': True, 'schema': {'type': 'number'}}], 'responses': {'200': {'description': '글 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Post'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 글 작성', 'description': '사용자가 새로운 글을 작성합니다.', 'tags': ['Posts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreatePostRequest'}}}}, 'responses': {'201': {'description': '글 작성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Post'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/grocery': {'post': {'summary': '장보기 목록 공유', 'description': '사용자가 장보기 목록을 공유합니다.', 'tags': ['Grocery'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateGroceryRequest'}}}}, 'responses': {'201': {'description': '장보기 목록 공유 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Grocery'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/help-requests': {'post': {'summary': '이웃에게 도움 요청', 'description': '사용자가 근처 이웃에게 도움을 요청합니다.', 'tags': ['Help'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateHelpRequest'}}}}, 'responses': {'201': {'description': '도움 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/HelpRequest'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/coupons': {'get': {'summary': '사용 가능한 쿠폰 조회', 'description': '사용자가 사용할 수 있는 쿠폰 목록을 조회합니다.', 'tags': ['Coupons'], 'responses': {'200': {'description': '쿠폰 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Coupon'}}}}}}}, '404': {'description': '쿠폰을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Post': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'userId': {'type': 'integer', 'example': 1}, 'content': {'type': 'string', 'example': '근처에 맛집이 생겼어요!'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreatePostRequest': {'type': 'object', 'required': ['content'], 'properties': {'content': {'type': 'string', 'minLength': 1, 'maxLength': 500, 'example': '근처에 맛집이 생겼어요!'}}}, 'Grocery': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'items': {'type': 'array', 'items': {'type': 'string', 'example': '우유, 빵, 과일'}}, 'sharedBy': {'type': 'array', 'items': {'type': 'integer', 'example': 1}}}}, 'CreateGroceryRequest': {'type': 'object', 'required': ['items'], 'properties': {'items': {'type': 'array', 'items': {'type': 'string', 'example': '우유, 빵, 과일'}}}}, 'HelpRequest': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'userId': {'type': 'integer', 'example': 1}, 'message': {'type': 'string', 'example': '도움이 필요합니다!'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateHelpRequest': {'type': 'object', 'required': ['message'], 'properties': {'message': {'type': 'string', 'minLength': 1, 'maxLength': 500, 'example': '도움이 필요합니다!'}}}, 'Coupon': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'code': {'type': 'string', 'example': 'DISCOUNT10'}, 'description': {'type': 'string', 'example': '10% 할인 쿠폰'}, 'validUntil': {'type': 'string', 'format': 'date-time', 'example': '2024-12-31T23:59:59Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
3,"{'openapi': '3.0.0', 'info': {'title': 'Emergency Room Finder API', 'version': '1.0.0', 'description': '응급실 및 병원 찾기 기능을 제공하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/emergency-rooms': {'get': {'summary': '가장 가까운 응급실 조회', 'description': '사용자 위치 기준으로 가장 가까운 응급실을 조회합니다.', 'tags': ['Emergency Rooms'], 'parameters': [{'name': 'latitude', 'in': 'query', 'description': '사용자 위도', 'required': True, 'schema': {'type': 'number'}}, {'name': 'longitude', 'in': 'query', 'description': '사용자 경도', 'required': True, 'schema': {'type': 'number'}}], 'responses': {'200': {'description': '응급실 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/EmergencyRoom'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/emergency-rooms/available': {'get': {'summary': '빈 자리가 있는 응급실 조회', 'description': '사용자 위치 기준으로 빈 자리가 있는 응급실을 조회합니다.', 'tags': ['Emergency Rooms'], 'parameters': [{'name': 'latitude', 'in': 'query', 'description': '사용자 위도', 'required': True, 'schema': {'type': 'number'}}, {'name': 'longitude', 'in': 'query', 'description': '사용자 경도', 'required': True, 'schema': {'type': 'number'}}], 'responses': {'200': {'description': '빈 자리가 있는 응급실 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/EmergencyRoom'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/hospitals/symptoms': {'post': {'summary': '증상 기반 병원 추천', 'description': '사용자의 증상에 맞는 병원과 진료과목을 추천합니다.', 'tags': ['Hospitals'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SymptomRequest'}}}}, 'responses': {'200': {'description': '병원 추천 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/HospitalRecommendation'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'EmergencyRoom': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '서울 중앙 응급실'}, 'address': {'type': 'string', 'example': '서울특별시 중구 세종대로 110'}, 'phone': {'type': 'string', 'example': '02-1234-5678'}, 'availableBeds': {'type': 'integer', 'example': 5}}}, 'SymptomRequest': {'type': 'object', 'properties': {'symptoms': {'type': 'array', 'items': {'type': 'string'}, 'example': ['두통', '발열']}}}, 'HospitalRecommendation': {'type': 'object', 'properties': {'hospitalId': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '서울대학교병원'}, 'specialties': {'type': 'array', 'items': {'type': 'string'}, 'example': ['소아과', '이비인후과']}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
4,"{'openapi': '3.0.0', 'info': {'title': 'Wolgok Community Platform API', 'version': '1.0.0', 'description': '월곡 1,2동 지역 기반 정보 제공 및 커뮤니티 웹 플랫폼 API'}, 'servers': [{'url': 'https://api.wolgokcommunity.com/v1', 'description': 'Production server'}], 'paths': {'/posts': {'get': {'summary': '게시물 목록 조회', 'description': '모든 게시물 목록을 조회합니다.', 'tags': ['Posts'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '게시물 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Post'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 게시물 생성', 'description': '새로운 게시물을 생성합니다.', 'tags': ['Posts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreatePostRequest'}}}}, 'responses': {'201': {'description': '게시물 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Post'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/posts/{postId}': {'get': {'summary': '특정 게시물 조회', 'description': '게시물 ID로 특정 게시물 정보를 조회합니다.', 'tags': ['Posts'], 'parameters': [{'name': 'postId', 'in': 'path', 'required': True, 'description': '게시물 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '게시물 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Post'}}}}}}, '404': {'description': '게시물을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '게시물 수정', 'description': '게시물 정보를 수정합니다.', 'tags': ['Posts'], 'parameters': [{'name': 'postId', 'in': 'path', 'required': True, 'description': '게시물 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdatePostRequest'}}}}, 'responses': {'200': {'description': '게시물 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Post'}}}}}}, '404': {'description': '게시물을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '게시물 삭제', 'description': '게시물을 삭제합니다.', 'tags': ['Posts'], 'parameters': [{'name': 'postId', 'in': 'path', 'required': True, 'description': '게시물 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '게시물 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '게시물이 성공적으로 삭제되었습니다.'}}}}}}, '404': {'description': '게시물을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다.', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}': {'get': {'summary': '특정 사용자 조회', 'description': '사용자 ID로 특정 사용자 정보를 조회합니다.', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '사용자 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Post': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '동네 맛집 추천'}, 'content': {'type': 'string', 'example': '이곳의 음식이 정말 맛있어요!'}, 'authorId': {'type': 'integer', 'example': 1}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreatePostRequest': {'type': 'object', 'required': ['title', 'content'], 'properties': {'title': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '동네 맛집 추천'}, 'content': {'type': 'string', 'minLength': 1, 'example': '이곳의 음식이 정말 맛있어요!'}}}, 'UpdatePostRequest': {'type': 'object', 'properties': {'title': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '동네 맛집 추천 수정'}, 'content': {'type': 'string', 'minLength': 1, 'example': '수정된 내용입니다.'}}}, 'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'username': {'type': 'string', 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['username', 'email', 'password'], 'properties': {'username': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'password': {'type': 'string', 'minLength': 8, 'example': 'password123'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
5,"{'openapi': '3.0.0', 'info': {'title': 'Job Preparation Community API', 'version': '1.0.0', 'description': '취준생들을 위한 종합 커뮤니티 플랫폼 API'}, 'servers': [{'url': 'https://api.jobcommunity.com/v1', 'description': 'Production server'}], 'paths': {'/experiences': {'get': {'summary': '합격자 경험담 목록 조회', 'description': '등록된 모든 합격자 경험담 목록을 조회합니다', 'tags': ['Experiences'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '합격자 경험담 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Experience'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 합격자 경험담 생성', 'description': '새로운 합격자 경험담을 생성합니다', 'tags': ['Experiences'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateExperienceRequest'}}}}, 'responses': {'201': {'description': '합격자 경험담 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Experience'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/experiences/{experienceId}': {'get': {'summary': '특정 합격자 경험담 조회', 'description': '경험담 ID로 특정 합격자 경험담 정보를 조회합니다', 'tags': ['Experiences'], 'parameters': [{'name': 'experienceId', 'in': 'path', 'required': True, 'description': '경험담 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '합격자 경험담 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Experience'}}}}}}, '404': {'description': '경험담을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '합격자 경험담 수정', 'description': '합격자 경험담을 수정합니다', 'tags': ['Experiences'], 'parameters': [{'name': 'experienceId', 'in': 'path', 'required': True, 'description': '경험담 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateExperienceRequest'}}}}, 'responses': {'200': {'description': '합격자 경험담 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Experience'}}}}}}, '404': {'description': '경험담을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '합격자 경험담 삭제', 'description': '합격자 경험담을 삭제합니다', 'tags': ['Experiences'], 'parameters': [{'name': 'experienceId', 'in': 'path', 'required': True, 'description': '경험담 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '합격자 경험담 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '경험담이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '경험담을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/study-groups': {'get': {'summary': '스터디 모임 목록 조회', 'description': '등록된 모든 스터디 모임 목록을 조회합니다', 'tags': ['Study Groups'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '스터디 모임 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/StudyGroup'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 스터디 모임 생성', 'description': '새로운 스터디 모임을 생성합니다', 'tags': ['Study Groups'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateStudyGroupRequest'}}}}, 'responses': {'201': {'description': '스터디 모임 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/StudyGroup'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/study-groups/{groupId}': {'get': {'summary': '특정 스터디 모임 조회', 'description': '스터디 모임 ID로 특정 스터디 모임 정보를 조회합니다', 'tags': ['Study Groups'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 모임 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스터디 모임 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/StudyGroup'}}}}}}, '404': {'description': '스터디 모임을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '스터디 모임 수정', 'description': '스터디 모임 정보를 수정합니다', 'tags': ['Study Groups'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 모임 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateStudyGroupRequest'}}}}, 'responses': {'200': {'description': '스터디 모임 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/StudyGroup'}}}}}}, '404': {'description': '스터디 모임을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '스터디 모임 삭제', 'description': '스터디 모임을 삭제합니다', 'tags': ['Study Groups'], 'parameters': [{'name': 'groupId', 'in': 'path', 'required': True, 'description': '스터디 모임 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스터디 모임 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '스터디 모임이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '스터디 모임을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/mock-interviews': {'post': {'summary': '모의 면접 요청', 'description': '모의 면접을 요청하고 결과를 받습니다', 'tags': ['Mock Interviews'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MockInterviewRequest'}}}}, 'responses': {'200': {'description': '모의 면접 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'feedback': {'type': 'string', 'example': '면접에서의 강점과 개선할 점'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/career-counseling': {'post': {'summary': '개인 맞춤형 진로 상담 요청', 'description': '사용자의 경력과 목표에 맞는 진로 상담을 요청합니다', 'tags': ['Career Counseling'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CareerCounselingRequest'}}}}, 'responses': {'200': {'description': '진로 상담 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'recommendations': {'type': 'array', 'items': {'type': 'string', 'example': '추천 기업 A'}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/job-schedules': {'get': {'summary': '취업 일정 목록 조회', 'description': '등록된 모든 취업 일정 목록을 조회합니다', 'tags': ['Job Schedules'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '취업 일정 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/JobSchedule'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 취업 일정 생성', 'description': '새로운 취업 일정을 생성합니다', 'tags': ['Job Schedules'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateJobScheduleRequest'}}}}, 'responses': {'201': {'description': '취업 일정 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/JobSchedule'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/job-schedules/{scheduleId}': {'get': {'summary': '특정 취업 일정 조회', 'description': '취업 일정 ID로 특정 취업 일정을 조회합니다', 'tags': ['Job Schedules'], 'parameters': [{'name': 'scheduleId', 'in': 'path', 'required': True, 'description': '취업 일정 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '취업 일정 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/JobSchedule'}}}}}}, '404': {'description': '취업 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '취업 일정 수정', 'description': '취업 일정을 수정합니다', 'tags': ['Job Schedules'], 'parameters': [{'name': 'scheduleId', 'in': 'path', 'required': True, 'description': '취업 일정 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateJobScheduleRequest'}}}}, 'responses': {'200': {'description': '취업 일정 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/JobSchedule'}}}}}}, '404': {'description': '취업 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '취업 일정 삭제', 'description': '취업 일정을 삭제합니다', 'tags': ['Job Schedules'], 'parameters': [{'name': 'scheduleId', 'in': 'path', 'required': True, 'description': '취업 일정 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '취업 일정 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '취업 일정이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '취업 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Experience': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '합격 후기 제목'}, 'content': {'type': 'string', 'example': '합격 후기 내용'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateExperienceRequest': {'type': 'object', 'required': ['title', 'content'], 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '합격 후기 제목'}, 'content': {'type': 'string', 'minLength': 10, 'example': '합격 후기 내용'}}}, 'UpdateExperienceRequest': {'type': 'object', 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '수정된 합격 후기 제목'}, 'content': {'type': 'string', 'minLength': 10, 'example': '수정된 합격 후기 내용'}}}, 'StudyGroup': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '스터디 모임 이름'}, 'description': {'type': 'string', 'example': '스터디 모임 설명'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateStudyGroupRequest': {'type': 'object', 'required': ['name', 'description'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '스터디 모임 이름'}, 'description': {'type': 'string', 'minLength': 10, 'example': '스터디 모임 설명'}}}, 'UpdateStudyGroupRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '수정된 스터디 모임 이름'}, 'description': {'type': 'string', 'minLength': 10, 'example': '수정된 스터디 모임 설명'}}}, 'MockInterviewRequest': {'type': 'object', 'required': ['questions'], 'properties': {'questions': {'type': 'array', 'items': {'type': 'string', 'example': '자기소개 해주세요.'}}}}, 'CareerCounselingRequest': {'type': 'object', 'required': ['experience', 'goals'], 'properties': {'experience': {'type': 'string', 'example': '3년의 IT 경력'}, 'goals': {'type': 'string', 'example': '소프트웨어 엔지니어로 취업'}}}, 'JobSchedule': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'event': {'type': 'string', 'example': '공채 일정'}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-02-01'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateJobScheduleRequest': {'type': 'object', 'required': ['event', 'date'], 'properties': {'event': {'type': 'string', 'minLength': 3, 'example': '공채 일정'}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-02-01'}}}, 'UpdateJobScheduleRequest': {'type': 'object', 'properties': {'event': {'type': 'string', 'minLength': 3, 'example': '수정된 공채 일정'}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-02-15'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
6,"{'openapi': '3.0.0', 'info': {'title': 'Personal Assistant API', 'version': '1.0.0', 'description': '개인 맞춤형 비서 역할을 하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/reminders': {'get': {'summary': '알림 목록 조회', 'description': '사용자의 모든 알림 목록을 조회합니다', 'tags': ['Reminders'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '알림 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Reminder'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 알림 생성', 'description': '새로운 알림을 생성합니다', 'tags': ['Reminders'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateReminderRequest'}}}}, 'responses': {'201': {'description': '알림 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Reminder'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/reminders/{reminderId}': {'get': {'summary': '특정 알림 조회', 'description': '알림 ID로 특정 알림 정보를 조회합니다', 'tags': ['Reminders'], 'parameters': [{'name': 'reminderId', 'in': 'path', 'required': True, 'description': '알림 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '알림 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Reminder'}}}}}}, '404': {'description': '알림을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '알림 정보 수정', 'description': '알림 정보를 수정합니다', 'tags': ['Reminders'], 'parameters': [{'name': 'reminderId', 'in': 'path', 'required': True, 'description': '알림 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateReminderRequest'}}}}, 'responses': {'200': {'description': '알림 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Reminder'}}}}}}, '404': {'description': '알림을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '알림 삭제', 'description': '알림을 삭제합니다', 'tags': ['Reminders'], 'parameters': [{'name': 'reminderId', 'in': 'path', 'required': True, 'description': '알림 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '알림 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '알림이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '알림을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/checklist': {'get': {'summary': '건강 체크리스트 조회', 'description': '사용자의 건강 체크리스트를 조회합니다', 'tags': ['Checklist'], 'responses': {'200': {'description': '체크리스트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/ChecklistItem'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '체크리스트 항목 추가', 'description': '새로운 체크리스트 항목을 추가합니다', 'tags': ['Checklist'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateChecklistItemRequest'}}}}, 'responses': {'201': {'description': '체크리스트 항목 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/ChecklistItem'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/checklist/{itemId}': {'put': {'summary': '체크리스트 항목 수정', 'description': '체크리스트 항목을 수정합니다', 'tags': ['Checklist'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '체크리스트 항목 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateChecklistItemRequest'}}}}, 'responses': {'200': {'description': '체크리스트 항목 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/ChecklistItem'}}}}}}, '404': {'description': '체크리스트 항목을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '체크리스트 항목 삭제', 'description': '체크리스트 항목을 삭제합니다', 'tags': ['Checklist'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '체크리스트 항목 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '체크리스트 항목 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '체크리스트 항목이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '체크리스트 항목을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/shopping': {'post': {'summary': '쇼핑 주문 생성', 'description': '필요한 물품을 주문합니다', 'tags': ['Shopping'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateShoppingOrderRequest'}}}}, 'responses': {'201': {'description': '쇼핑 주문 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/ShoppingOrder'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Reminder': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '약 복용'}, 'description': {'type': 'string', 'example': '아침 8시에 약 복용'}, 'time': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T08:00:00Z'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T07:00:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T07:00:00Z'}}}, 'CreateReminderRequest': {'type': 'object', 'required': ['title', 'time'], 'properties': {'title': {'type': 'string', 'example': '약 복용'}, 'description': {'type': 'string', 'example': '아침 8시에 약 복용'}, 'time': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T08:00:00Z'}}}, 'UpdateReminderRequest': {'type': 'object', 'properties': {'title': {'type': 'string', 'example': '약 복용 수정'}, 'description': {'type': 'string', 'example': '아침 8시에 약 복용 수정'}, 'time': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T09:00:00Z'}}}, 'ChecklistItem': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'task': {'type': 'string', 'example': '물 마시기'}, 'completed': {'type': 'boolean', 'example': False}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T07:00:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T07:00:00Z'}}}, 'CreateChecklistItemRequest': {'type': 'object', 'required': ['task'], 'properties': {'task': {'type': 'string', 'example': '물 마시기'}}}, 'UpdateChecklistItemRequest': {'type': 'object', 'properties': {'task': {'type': 'string', 'example': '물 마시기 수정'}, 'completed': {'type': 'boolean', 'example': True}}}, 'ShoppingOrder': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'items': {'type': 'array', 'items': {'type': 'string', 'example': '비타민 C'}}, 'orderDate': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:00:00Z'}, 'status': {'type': 'string', 'example': '주문 완료'}}}, 'CreateShoppingOrderRequest': {'type': 'object', 'required': ['items'], 'properties': {'items': {'type': 'array', 'items': {'type': 'string', 'example': '비타민 C'}}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
7,"{'openapi': '3.0.0', 'info': {'title': 'Green Challenge API', 'version': '1.0.0', 'description': '친환경 습관 코칭 서비스 API'}, 'servers': [{'url': 'https://api.greenchallenge.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/actions': {'post': {'summary': '친환경 행동 기록', 'description': '사용자의 친환경 행동을 기록합니다', 'tags': ['Actions'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ActionRequest'}}}}, 'responses': {'201': {'description': '행동 기록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ActionResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/carbon-footprint': {'get': {'summary': '탄소 발자국 조회', 'description': '사용자의 탄소 발자국을 조회합니다', 'tags': ['Carbon Footprint'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '탄소 발자국 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CarbonFootprintResponse'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/missions': {'get': {'summary': '맞춤형 친환경 미션 조회', 'description': '사용자에게 맞춤형 친환경 미션을 조회합니다', 'tags': ['Missions'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '미션 조회 성공', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'$ref': '#/components/schemas/Mission'}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/challenges': {'post': {'summary': '친환경 챌린지 생성', 'description': '새로운 친환경 챌린지를 생성합니다', 'tags': ['Challenges'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateChallengeRequest'}}}}, 'responses': {'201': {'description': '챌린지 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Challenge'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/challenges/{challengeId}/participants': {'post': {'summary': '챌린지 참가', 'description': '사용자가 챌린지에 참가합니다', 'tags': ['Challenges'], 'parameters': [{'name': 'challengeId', 'in': 'path', 'required': True, 'description': '챌린지 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ParticipantRequest'}}}}, 'responses': {'201': {'description': '챌린지 참가 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ParticipantResponse'}}}}, '404': {'description': '챌린지를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'username': {'type': 'string', 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['username', 'email'], 'properties': {'username': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'password': {'type': 'string', 'minLength': 8, 'example': 'password123'}}}, 'ActionRequest': {'type': 'object', 'required': ['actionType', 'value'], 'properties': {'actionType': {'type': 'string', 'example': 'recycling'}, 'value': {'type': 'integer', 'example': 5}}}, 'ActionResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '행동이 성공적으로 기록되었습니다'}}}, 'CarbonFootprintResponse': {'type': 'object', 'properties': {'carbonFootprint': {'type': 'number', 'example': 120.5}, 'trend': {'type': 'string', 'example': 'decreasing'}}}, 'Mission': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'description': {'type': 'string', 'example': '일주일 동안 대중교통 이용하기'}, 'reward': {'type': 'string', 'example': '배지: 대중교통 마스터'}}}, 'CreateChallengeRequest': {'type': 'object', 'required': ['title', 'description'], 'properties': {'title': {'type': 'string', 'example': '1주일 동안 플라스틱 사용 줄이기'}, 'description': {'type': 'string', 'example': '플라스틱 사용을 줄이기 위한 챌린지입니다.'}, 'duration': {'type': 'integer', 'example': 7}}}, 'Challenge': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '1주일 동안 플라스틱 사용 줄이기'}, 'participantsCount': {'type': 'integer', 'example': 10}}}, 'ParticipantRequest': {'type': 'object', 'required': ['userId'], 'properties': {'userId': {'type': 'integer', 'example': 1}}}, 'ParticipantResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '챌린지에 성공적으로 참가하였습니다'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
8,"{'openapi': '3.0.0', 'info': {'title': 'Healthy Food Planner API', 'version': '1.0.0', 'description': '사용자의 건강 목표와 라이프스타일에 맞춘 맞춤형 식단 코칭 서비스'}, 'servers': [{'url': 'https://api.healthyfoodplanner.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '새 사용자 등록', 'description': '사용자의 신체 정보와 건강 목표를 등록합니다.', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/meal-plans': {'get': {'summary': '맞춤 식단 조회', 'description': '사용자 ID로 맞춤 식단을 조회합니다.', 'tags': ['Meal Plans'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '맞춤 식단 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MealPlan'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/meal-records': {'post': {'summary': '식사 기록 추가', 'description': '사용자의 식사 기록을 추가합니다.', 'tags': ['Meal Records'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MealRecordRequest'}}}}, 'responses': {'201': {'description': '식사 기록 추가 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MealRecord'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/nutrition-analysis': {'get': {'summary': '영양소 분석', 'description': '사용자의 식사 기록을 기반으로 영양소 분석 결과를 조회합니다.', 'tags': ['Nutrition Analysis'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '영양소 분석 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/NutritionAnalysis'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/patterns': {'get': {'summary': '식습관 패턴 분석', 'description': '사용자의 식습관 패턴을 분석하여 결과를 조회합니다.', 'tags': ['Patterns'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '패턴 분석 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PatternAnalysis'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'John Doe'}, 'age': {'type': 'integer', 'example': 30}, 'height': {'type': 'number', 'format': 'float', 'example': 175.5}, 'weight': {'type': 'number', 'format': 'float', 'example': 70.0}, 'goal': {'type': 'string', 'example': 'weight_loss'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['name', 'age', 'height', 'weight', 'goal'], 'properties': {'name': {'type': 'string', 'example': 'John Doe'}, 'age': {'type': 'integer', 'example': 30}, 'height': {'type': 'number', 'format': 'float', 'example': 175.5}, 'weight': {'type': 'number', 'format': 'float', 'example': 70.0}, 'goal': {'type': 'string', 'example': 'weight_loss'}, 'allergies': {'type': 'array', 'items': {'type': 'string'}, 'example': ['nuts', 'dairy']}, 'preferences': {'type': 'array', 'items': {'type': 'string'}, 'example': ['vegetarian', 'gluten_free']}, 'budget': {'type': 'number', 'format': 'float', 'example': 100.0}}}, 'MealPlan': {'type': 'object', 'properties': {'meals': {'type': 'array', 'items': {'$ref': '#/components/schemas/Meal'}}}}, 'Meal': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': 'Grilled Chicken Salad'}, 'recipe': {'type': 'string', 'example': 'Grill chicken and mix with salad.'}, 'calories': {'type': 'integer', 'example': 350}, 'nutrients': {'type': 'object', 'properties': {'protein': {'type': 'number', 'example': 30}, 'carbohydrates': {'type': 'number', 'example': 20}, 'fats': {'type': 'number', 'example': 10}}}}}, 'MealRecordRequest': {'type': 'object', 'required': ['mealName', 'calories'], 'properties': {'mealName': {'type': 'string', 'example': 'Breakfast'}, 'calories': {'type': 'integer', 'example': 300}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}}}, 'MealRecord': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'mealName': {'type': 'string', 'example': 'Breakfast'}, 'calories': {'type': 'integer', 'example': 300}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}}}, 'NutritionAnalysis': {'type': 'object', 'properties': {'totalCalories': {'type': 'integer', 'example': 2000}, 'nutrients': {'type': 'object', 'properties': {'protein': {'type': 'number', 'example': 150}, 'carbohydrates': {'type': 'number', 'example': 250}, 'fats': {'type': 'number', 'example': 70}}}, 'recommendations': {'type': 'array', 'items': {'type': 'string'}, 'example': ['Increase protein intake', 'Reduce sugar consumption']}}}, 'PatternAnalysis': {'type': 'object', 'properties': {'patterns': {'type': 'array', 'items': {'type': 'string'}, 'example': ['High carb intake on weekends', 'Low vegetable consumption']}, 'suggestions': {'type': 'array', 'items': {'type': 'string'}, 'example': ['Incorporate more vegetables', 'Limit carb intake on weekends']}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
9,"{'openapi': '3.0.0', 'info': {'title': 'Hanging Game API', 'version': '1.0.0', 'description': ""디스토피아 서바이벌 시뮬레이션 게임 'Hanging'을 위한 API""}, 'servers': [{'url': 'https://api.hanginggame.com/v1', 'description': 'Production server'}], 'paths': {'/players': {'get': {'summary': '플레이어 목록 조회', 'description': '등록된 모든 플레이어 목록을 조회합니다', 'tags': ['Players'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '플레이어 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Player'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 플레이어 생성', 'description': '새로운 플레이어를 생성합니다', 'tags': ['Players'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreatePlayerRequest'}}}}, 'responses': {'201': {'description': '플레이어 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/players/{playerId}': {'get': {'summary': '특정 플레이어 조회', 'description': '플레이어 ID로 특정 플레이어 정보를 조회합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '플레이어 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '플레이어 정보 수정', 'description': '플레이어 정보를 수정합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdatePlayerRequest'}}}}, 'responses': {'200': {'description': '플레이어 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '플레이어 삭제', 'description': '플레이어를 삭제합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '플레이어 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '플레이어가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/executions': {'post': {'summary': '사형 집행', 'description': '특정 플레이어에 대한 사형을 집행합니다', 'tags': ['Executions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ExecutionRequest'}}}}, 'responses': {'200': {'description': '사형 집행 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '사형이 성공적으로 집행되었습니다'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Player': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'John Doe'}, 'citizenClass': {'type': 'string', 'example': 'Upper'}, 'loyalty': {'type': 'integer', 'example': 75}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreatePlayerRequest': {'type': 'object', 'required': ['name', 'citizenClass'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'John Doe'}, 'citizenClass': {'type': 'string', 'enum': ['Upper', 'Middle', 'Lower'], 'example': 'Upper'}}}, 'UpdatePlayerRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'John Doe Updated'}, 'citizenClass': {'type': 'string', 'enum': ['Upper', 'Middle', 'Lower'], 'example': 'Middle'}}}, 'ExecutionRequest': {'type': 'object', 'required': ['playerId'], 'properties': {'playerId': {'type': 'integer', 'example': 1}, 'reason': {'type': 'string', 'example': '반체제 인사'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
10,"{'openapi': '3.0.0', 'info': {'title': 'Order Management API', 'version': '1.0.0', 'description': '통합 주문 관리 시스템을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/products': {'get': {'summary': '상품 목록 조회', 'description': '등록된 모든 상품 목록을 조회합니다', 'tags': ['Products'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '상품 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Product'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 상품 등록', 'description': '새로운 상품을 등록합니다', 'tags': ['Products'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateProductRequest'}}}}, 'responses': {'201': {'description': '상품 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Product'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/products/{productId}': {'get': {'summary': '특정 상품 조회', 'description': '상품 ID로 특정 상품 정보를 조회합니다', 'tags': ['Products'], 'parameters': [{'name': 'productId', 'in': 'path', 'required': True, 'description': '상품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '상품 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Product'}}}}}}, '404': {'description': '상품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '상품 정보 수정', 'description': '상품 정보를 수정합니다', 'tags': ['Products'], 'parameters': [{'name': 'productId', 'in': 'path', 'required': True, 'description': '상품 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateProductRequest'}}}}, 'responses': {'200': {'description': '상품 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Product'}}}}}}, '404': {'description': '상품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '상품 삭제', 'description': '상품을 삭제합니다', 'tags': ['Products'], 'parameters': [{'name': 'productId', 'in': 'path', 'required': True, 'description': '상품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '상품 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '상품이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '상품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/orders': {'get': {'summary': '주문 목록 조회', 'description': '모든 주문 목록을 조회합니다', 'tags': ['Orders'], 'responses': {'200': {'description': '주문 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Order'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 주문 생성', 'description': '새로운 주문을 생성합니다', 'tags': ['Orders'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateOrderRequest'}}}}, 'responses': {'201': {'description': '주문 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Order'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/orders/{orderId}': {'get': {'summary': '특정 주문 조회', 'description': '주문 ID로 특정 주문 정보를 조회합니다', 'tags': ['Orders'], 'parameters': [{'name': 'orderId', 'in': 'path', 'required': True, 'description': '주문 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '주문 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Order'}}}}}}, '404': {'description': '주문을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '주문 상태 수정', 'description': ""주문 상태를 '주문 완료'로 수정합니다"", 'tags': ['Orders'], 'parameters': [{'name': 'orderId', 'in': 'path', 'required': True, 'description': '주문 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateOrderStatusRequest'}}}}, 'responses': {'200': {'description': '주문 상태 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Order'}}}}}}, '404': {'description': '주문을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '주문 삭제', 'description': '주문을 삭제합니다', 'tags': ['Orders'], 'parameters': [{'name': 'orderId', 'in': 'path', 'required': True, 'description': '주문 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '주문 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '주문이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '주문을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users': {'get': {'summary': '회원 목록 조회', 'description': '등록된 모든 회원 목록을 조회합니다', 'tags': ['Users'], 'responses': {'200': {'description': '회원 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/User'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}': {'get': {'summary': '특정 회원 조회', 'description': '회원 ID로 특정 회원 정보를 조회합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '회원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '회원 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '404': {'description': '회원 정보를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '회원 정보 수정', 'description': '회원 정보를 수정합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '회원 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateUserRequest'}}}}, 'responses': {'200': {'description': '회원 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '404': {'description': '회원 정보를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '회원 삭제', 'description': '회원 정보를 삭제합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '회원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '회원 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '회원이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '회원 정보를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Product': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '아메리카노'}, 'price': {'type': 'number', 'format': 'float', 'example': 4500}, 'description': {'type': 'string', 'example': '신선한 원두로 만든 아메리카노'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateProductRequest': {'type': 'object', 'required': ['name', 'price'], 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '아메리카노'}, 'price': {'type': 'number', 'format': 'float', 'example': 4500}, 'description': {'type': 'string', 'maxLength': 500, 'example': '신선한 원두로 만든 아메리카노'}}}, 'UpdateProductRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '아메리카노 수정'}, 'price': {'type': 'number', 'format': 'float', 'example': 5000}, 'description': {'type': 'string', 'maxLength': 500, 'example': '수정된 아메리카노 설명'}}}, 'Order': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'userId': {'type': 'integer', 'example': 1}, 'productIds': {'type': 'array', 'items': {'type': 'integer'}, 'example': [1, 2]}, 'status': {'type': 'string', 'example': '주문 완료'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateOrderRequest': {'type': 'object', 'required': ['userId', 'productIds'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'productIds': {'type': 'array', 'items': {'type': 'integer'}, 'example': [1, 2]}}}, 'UpdateOrderStatusRequest': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': '주문 완료'}}}, 'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '홍길동'}, 'email': {'type': 'string', 'format': 'email', 'example': 'hong@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'UpdateUserRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': '홍길동 수정'}, 'email': {'type': 'string', 'format': 'email', 'example': 'hong_updated@example.com'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
11,"{'openapi': '3.0.0', 'info': {'title': 'Pandora PC Bang Game API', 'version': '1.0.0', 'description': '판도라PC방 아르바이트 시뮬레이션 게임을 위한 API'}, 'servers': [{'url': 'https://api.pandorapcbang.com/v1', 'description': 'Production server'}], 'paths': {'/players': {'get': {'summary': '플레이어 목록 조회', 'description': '등록된 모든 플레이어 목록을 조회합니다', 'tags': ['Players'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '플레이어 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Player'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 플레이어 생성', 'description': '새로운 플레이어를 생성합니다', 'tags': ['Players'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreatePlayerRequest'}}}}, 'responses': {'201': {'description': '플레이어 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/players/{playerId}': {'get': {'summary': '특정 플레이어 조회', 'description': '플레이어 ID로 특정 플레이어 정보를 조회합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '플레이어 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '플레이어 정보 수정', 'description': '플레이어 정보를 수정합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdatePlayerRequest'}}}}, 'responses': {'200': {'description': '플레이어 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Player'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '플레이어 삭제', 'description': '플레이어를 삭제합니다', 'tags': ['Players'], 'parameters': [{'name': 'playerId', 'in': 'path', 'required': True, 'description': '플레이어 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '플레이어 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '플레이어가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '플레이어를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/missions': {'get': {'summary': '미션 목록 조회', 'description': '등록된 모든 미션 목록을 조회합니다', 'tags': ['Missions'], 'responses': {'200': {'description': '미션 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Mission'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/upgrades': {'get': {'summary': '업그레이드 목록 조회', 'description': '등록된 모든 업그레이드 목록을 조회합니다', 'tags': ['Upgrades'], 'responses': {'200': {'description': '업그레이드 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Upgrade'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Player': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'Alien Worker'}, 'level': {'type': 'integer', 'example': 1}, 'score': {'type': 'integer', 'example': 100}, 'upgrades': {'type': 'array', 'items': {'$ref': '#/components/schemas/Upgrade'}}}}, 'CreatePlayerRequest': {'type': 'object', 'required': ['name'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'Alien Worker'}}}, 'UpdatePlayerRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'Alien Worker Updated'}}}, 'Mission': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'description': {'type': 'string', 'example': '손님 응대하기'}, 'difficulty': {'type': 'string', 'example': 'medium'}, 'reward': {'type': 'integer', 'example': 50}}}, 'Upgrade': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '조리 속도 업그레이드'}, 'cost': {'type': 'integer', 'example': 200}, 'effect': {'type': 'string', 'example': '조리 속도가 20% 증가합니다'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
12,"{'openapi': '3.0.0', 'info': {'title': 'Life Archive API', 'version': '1.0.0', 'description': '사용자의 하루 감정과 경험을 기록하고 회고 일기를 생성하는 감성 헬스케어 서비스'}, 'servers': [{'url': 'https://api.lifearchive.com/v1', 'description': 'Production server'}], 'paths': {'/emotions': {'get': {'summary': '감정 기록 조회', 'description': '사용자가 기록한 감정 목록을 조회합니다', 'tags': ['Emotions'], 'parameters': [{'name': 'userId', 'in': 'query', 'description': '사용자 ID', 'required': True, 'schema': {'type': 'integer'}}, {'name': 'date', 'in': 'query', 'description': '조회할 날짜 (YYYY-MM-DD 형식)', 'required': False, 'schema': {'type': 'string', 'format': 'date'}}], 'responses': {'200': {'description': '감정 기록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/EmotionRecord'}}}}}}}, '404': {'description': '감정 기록을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '감정 기록 추가', 'description': '사용자의 감정을 기록합니다', 'tags': ['Emotions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateEmotionRequest'}}}}, 'responses': {'201': {'description': '감정 기록 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/EmotionRecord'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/reflections': {'get': {'summary': '회고 일기 조회', 'description': '사용자의 회고 일기를 조회합니다', 'tags': ['Reflections'], 'parameters': [{'name': 'userId', 'in': 'query', 'description': '사용자 ID', 'required': True, 'schema': {'type': 'integer'}}, {'name': 'date', 'in': 'query', 'description': '조회할 날짜 (YYYY-MM-DD 형식)', 'required': False, 'schema': {'type': 'string', 'format': 'date'}}], 'responses': {'200': {'description': '회고 일기 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Reflection'}}}}}}, '404': {'description': '회고 일기를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '회고 일기 생성', 'description': '사용자의 회고 일기를 생성합니다', 'tags': ['Reflections'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateReflectionRequest'}}}}, 'responses': {'201': {'description': '회고 일기 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Reflection'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/emotions/stats': {'get': {'summary': '감정 통계 조회', 'description': '사용자의 감정 통계를 조회합니다', 'tags': ['Emotions'], 'parameters': [{'name': 'userId', 'in': 'query', 'description': '사용자 ID', 'required': True, 'schema': {'type': 'integer'}}, {'name': 'startDate', 'in': 'query', 'description': '통계 시작 날짜 (YYYY-MM-DD 형식)', 'required': True, 'schema': {'type': 'string', 'format': 'date'}}, {'name': 'endDate', 'in': 'query', 'description': '통계 종료 날짜 (YYYY-MM-DD 형식)', 'required': True, 'schema': {'type': 'string', 'format': 'date'}}], 'responses': {'200': {'description': '감정 통계 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/EmotionStats'}}}}}}, '404': {'description': '통계 데이터를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'EmotionRecord': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'userId': {'type': 'integer', 'example': 1}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'emotion': {'type': 'string', 'example': '행복'}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'example': ['기쁨', '성취']}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateEmotionRequest': {'type': 'object', 'required': ['userId', 'date', 'emotion'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'emotion': {'type': 'string', 'example': '행복'}, 'keywords': {'type': 'array', 'items': {'type': 'string'}, 'example': ['기쁨', '성취']}}}, 'Reflection': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'userId': {'type': 'integer', 'example': 1}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'content': {'type': 'string', 'example': '오늘은 정말 행복한 하루였다.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateReflectionRequest': {'type': 'object', 'required': ['userId', 'date', 'content'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'content': {'type': 'string', 'example': '오늘은 정말 행복한 하루였다.'}}}, 'EmotionStats': {'type': 'object', 'properties': {'userId': {'type': 'integer', 'example': 1}, 'emotions': {'type': 'object', 'additionalProperties': {'type': 'integer'}, 'example': {'행복': 5, '슬픔': 2, '분노': 1}}, 'dateRange': {'type': 'string', 'example': '2024-01-01 to 2024-01-15'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
13,"{'openapi': '3.0.0', 'info': {'title': 'RentalGuard API', 'version': '1.0.0', 'description': '전·월세 계약 분석 및 리스크 평가를 위한 API'}, 'servers': [{'url': 'https://api.rentalguard.com/v1', 'description': 'Production server'}], 'paths': {'/contracts/upload': {'post': {'summary': '계약서 업로드', 'description': '사용자가 계약서를 업로드하여 AI 분석을 요청합니다.', 'tags': ['Contracts'], 'requestBody': {'required': True, 'content': {'multipart/form-data': {'schema': {'type': 'object', 'properties': {'file': {'type': 'string', 'format': 'binary'}}}}}, 'responses': {'200': {'description': '계약서 분석 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/ContractAnalysisResult'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/contracts/{contractId}': {'get': {'summary': '계약서 분석 결과 조회', 'description': '특정 계약서의 분석 결과를 조회합니다.', 'tags': ['Contracts'], 'parameters': [{'name': 'contractId', 'in': 'path', 'required': True, 'description': '계약서 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '계약서 분석 결과 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/ContractAnalysisResult'}}}}}}, '404': {'description': '계약서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/market-data': {'get': {'summary': '지역 시세 및 실거래가 조회', 'description': '특정 지역의 평균 보증금 및 월세 수준을 조회합니다.', 'tags': ['Market'], 'parameters': [{'name': 'region', 'in': 'query', 'required': True, 'description': '조회할 지역', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '지역 시세 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/MarketData'}}}}}}, '404': {'description': '지역 정보를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'ContractAnalysisResult': {'type': 'object', 'properties': {'summary': {'type': 'string', 'example': '계약서의 주요 조항 요약'}, 'missingClauses': {'type': 'array', 'items': {'type': 'string'}, 'example': ['보증금 반환 조항 누락']}, 'riskPhrases': {'type': 'array', 'items': {'type': 'string'}, 'example': ['위험한 조항 발견']}, 'advisory': {'type': 'string', 'example': '주의가 필요한 계약입니다.'}}}, 'MarketData': {'type': 'object', 'properties': {'averageDeposit': {'type': 'number', 'example': 5000000}, 'averageRent': {'type': 'number', 'example': 500000}, 'warning': {'type': 'string', 'example': '해당 지역의 시세가 높습니다.'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
14,"{'openapi': '3.0.0', 'info': {'title': 'AI Travel Itinerary Recommendation API', 'version': '1.0.0', 'description': '사용자 맞춤형 AI 여행 일정 추천 서비스'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/itineraries': {'post': {'summary': '여행 일정 생성', 'description': '사용자의 입력에 따라 AI가 여행 일정을 생성합니다.', 'tags': ['Itineraries'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateItineraryRequest'}}}}, 'responses': {'201': {'description': '여행 일정 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ItineraryResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/itineraries/{itineraryId}': {'get': {'summary': '특정 여행 일정 조회', 'description': '여행 일정 ID로 특정 여행 일정을 조회합니다.', 'tags': ['Itineraries'], 'parameters': [{'name': 'itineraryId', 'in': 'path', 'required': True, 'description': '여행 일정 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '여행 일정 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ItineraryResponse'}}}}, '404': {'description': '여행 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '여행 일정 수정', 'description': '기존 여행 일정을 수정합니다.', 'tags': ['Itineraries'], 'parameters': [{'name': 'itineraryId', 'in': 'path', 'required': True, 'description': '여행 일정 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateItineraryRequest'}}}}, 'responses': {'200': {'description': '여행 일정 수정 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ItineraryResponse'}}}}, '404': {'description': '여행 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '여행 일정 삭제', 'description': '여행 일정을 삭제합니다.', 'tags': ['Itineraries'], 'parameters': [{'name': 'itineraryId', 'in': 'path', 'required': True, 'description': '여행 일정 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '여행 일정 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '여행 일정이 성공적으로 삭제되었습니다.'}}}}}}, '404': {'description': '여행 일정을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/recommendations': {'get': {'summary': '추천 활동 조회', 'description': '현재 위치 주변의 추천 활동을 조회합니다.', 'tags': ['Recommendations'], 'parameters': [{'name': 'latitude', 'in': 'query', 'required': True, 'description': '위도', 'schema': {'type': 'number'}}, {'name': 'longitude', 'in': 'query', 'required': True, 'description': '경도', 'schema': {'type': 'number'}}], 'responses': {'200': {'description': '추천 활동 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Recommendation'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'CreateItineraryRequest': {'type': 'object', 'required': ['departureLocation', 'preferences', 'travelTime', 'budget'], 'properties': {'departureLocation': {'type': 'string', 'example': '서울'}, 'preferences': {'type': 'array', 'items': {'type': 'string', 'enum': ['자연', '음식', '문화', '휴식']}}, 'travelTime': {'type': 'string', 'example': '2일'}, 'budget': {'type': 'number', 'example': 500000}}}, 'UpdateItineraryRequest': {'type': 'object', 'properties': {'preferences': {'type': 'array', 'items': {'type': 'string', 'enum': ['자연', '음식', '문화', '휴식']}}, 'travelTime': {'type': 'string', 'example': '3일'}, 'budget': {'type': 'number', 'example': 600000}}}, 'ItineraryResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'itineraryId': {'type': 'string', 'example': 'itinerary_12345'}, 'details': {'type': 'array', 'items': {'$ref': '#/components/schemas/ItineraryDetail'}}}}}}, 'ItineraryDetail': {'type': 'object', 'properties': {'activity': {'type': 'string', 'example': '경복궁 방문'}, 'time': {'type': 'string', 'example': '2024-01-15T10:00:00Z'}, 'location': {'type': 'string', 'example': '서울'}, 'transportation': {'type': 'string', 'example': '지하철'}, 'accommodation': {'type': 'string', 'example': '호텔 ABC'}, 'restaurant': {'type': 'string', 'example': '식당 XYZ'}}}, 'Recommendation': {'type': 'object', 'properties': {'activity': {'type': 'string', 'example': '한강 자전거 타기'}, 'location': {'type': 'string', 'example': '한강 공원'}, 'event': {'type': 'string', 'example': '서울 불꽃놀이 축제'}, 'congestion': {'type': 'string', 'example': '보통'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
15,"{'openapi': '3.0.0', 'info': {'title': 'Marriage Encouragement Platform API', 'version': '1.0.0', 'description': '미혼남녀 및 결혼 희망자를 위한 결혼 장려 플랫폼 API'}, 'servers': [{'url': 'https://api.marriage-platform.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다.', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/match': {'get': {'summary': 'AI 매칭 결과 조회', 'description': '사용자 ID로 AI 매칭 결과를 조회합니다.', 'tags': ['Matching'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '매칭 결과 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MatchResult'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/relationship-simulation': {'post': {'summary': '연애 시뮬레이션 시작', 'description': '사용자가 연애 시뮬레이션을 시작합니다.', 'tags': ['Simulation'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SimulationRequest'}}}}, 'responses': {'200': {'description': '연애 시뮬레이션 시작 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SimulationResult'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/fertility-analysis': {'get': {'summary': '출산 가능성 분석', 'description': '사용자의 출산 가능성을 분석합니다.', 'tags': ['Analysis'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '출산 가능성 분석 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/FertilityAnalysisResult'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '홍길동'}, 'age': {'type': 'integer', 'example': 28}, 'gender': {'type': 'string', 'enum': ['male', 'female'], 'example': 'male'}, 'occupation': {'type': 'string', 'example': '소프트웨어 엔지니어'}, 'financialStatus': {'type': 'string', 'example': '안정적'}, 'familyStatus': {'type': 'string', 'example': '부모님과 함께 거주'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['name', 'age', 'gender', 'occupation', 'financialStatus', 'familyStatus'], 'properties': {'name': {'type': 'string', 'example': '홍길동'}, 'age': {'type': 'integer', 'example': 28}, 'gender': {'type': 'string', 'enum': ['male', 'female'], 'example': 'male'}, 'occupation': {'type': 'string', 'example': '소프트웨어 엔지니어'}, 'financialStatus': {'type': 'string', 'example': '안정적'}, 'familyStatus': {'type': 'string', 'example': '부모님과 함께 거주'}}}, 'MatchResult': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'matches': {'type': 'array', 'items': {'$ref': '#/components/schemas/User'}}}}, 'SimulationRequest': {'type': 'object', 'properties': {'scenario': {'type': 'string', 'example': '첫 데이트'}}}, 'SimulationResult': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'outcome': {'type': 'string', 'example': '데이트가 성공적으로 진행되었습니다.'}}}, 'FertilityAnalysisResult': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'analysis': {'type': 'string', 'example': '출산 가능성이 높습니다.'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
16,"{'openapi': '3.0.0', 'info': {'title': '중고 쉐어링 플랫폼 API', 'version': '1.0.0', 'description': '중고 물품 대여 및 공유를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/items': {'get': {'summary': '물품 목록 조회', 'description': '등록된 모든 물품 목록을 조회합니다', 'tags': ['Items'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}, {'name': 'search', 'in': 'query', 'description': '검색어', 'required': False, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '물품 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Item'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '물품 등록', 'description': '새로운 물품을 등록합니다', 'tags': ['Items'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateItemRequest'}}}}, 'responses': {'201': {'description': '물품 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/items/{itemId}': {'get': {'summary': '특정 물품 조회', 'description': '물품 ID로 특정 물품 정보를 조회합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '물품 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '물품 정보 수정', 'description': '물품 정보를 수정합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateItemRequest'}}}}, 'responses': {'200': {'description': '물품 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '물품 삭제', 'description': '물품을 삭제합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '물품 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '물품이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/items/{itemId}/rent': {'post': {'summary': '물품 대여', 'description': '물품을 대여합니다', 'tags': ['Rentals'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/RentItemRequest'}}}}, 'responses': {'201': {'description': '물품 대여 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Rental'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/pledge': {'post': {'summary': '물건 미반납 방지를 위한 서약서 등록', 'description': '사용자가 물건 미반납 방지를 위한 서약서를 등록합니다', 'tags': ['Pledges'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PledgeRequest'}}}}, 'responses': {'201': {'description': '서약서 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '서약서가 성공적으로 등록되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Item': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '전동 드릴'}, 'description': {'type': 'string', 'example': '고성능 전동 드릴입니다.'}, 'ownerId': {'type': 'integer', 'example': 1}, 'price': {'type': 'number', 'format': 'float', 'example': 15.99}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateItemRequest': {'type': 'object', 'required': ['name', 'description', 'price'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '전동 드릴'}, 'description': {'type': 'string', 'minLength': 10, 'example': '고성능 전동 드릴입니다.'}, 'price': {'type': 'number', 'format': 'float', 'example': 15.99}}}, 'UpdateItemRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '전동 드릴 업데이트'}, 'description': {'type': 'string', 'minLength': 10, 'example': '업데이트된 고성능 전동 드릴입니다.'}, 'price': {'type': 'number', 'format': 'float', 'example': 19.99}}}, 'RentItemRequest': {'type': 'object', 'required': ['renterId', 'duration'], 'properties': {'renterId': {'type': 'integer', 'example': 1}, 'duration': {'type': 'integer', 'example': 7}}}, 'Rental': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'itemId': {'type': 'integer', 'example': 1}, 'renterId': {'type': 'integer', 'example': 1}, 'startDate': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'endDate': {'type': 'string', 'format': 'date-time', 'example': '2024-01-22T10:30:00Z'}}}, 'PledgeRequest': {'type': 'object', 'required': ['userId', 'pledgeText'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'pledgeText': {'type': 'string', 'example': '나는 이 물건을 제때 반납하겠습니다.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
17,"{'openapi': '3.0.0', 'info': {'title': 'Used Item Sharing Platform API', 'version': '1.0.0', 'description': '중고 물품 대여를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/items': {'get': {'summary': '물품 목록 조회', 'description': '등록된 모든 물품 목록을 조회합니다', 'tags': ['Items'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '물품 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Item'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 물품 등록', 'description': '새로운 물품을 등록합니다', 'tags': ['Items'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateItemRequest'}}}}, 'responses': {'201': {'description': '물품 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/items/{itemId}': {'get': {'summary': '특정 물품 조회', 'description': '물품 ID로 특정 물품 정보를 조회합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '물품 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '물품 정보 수정', 'description': '물품 정보를 수정합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateItemRequest'}}}}, 'responses': {'200': {'description': '물품 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Item'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '물품 삭제', 'description': '물품을 삭제합니다', 'tags': ['Items'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '물품 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '물품 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '물품이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '물품을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/rentals': {'post': {'summary': '물품 대여 요청', 'description': '물품을 대여 요청합니다', 'tags': ['Rentals'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateRentalRequest'}}}}, 'responses': {'201': {'description': '대여 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Rental'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/rentals/{rentalId}': {'get': {'summary': '대여 요청 조회', 'description': '대여 요청 ID로 특정 대여 요청 정보를 조회합니다', 'tags': ['Rentals'], 'parameters': [{'name': 'rentalId', 'in': 'path', 'required': True, 'description': '대여 요청 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '대여 요청 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Rental'}}}}}}, '404': {'description': '대여 요청을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/agreements': {'post': {'summary': '서약서 체결', 'description': '물품 대여에 대한 서약서를 체결합니다', 'tags': ['Agreements'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateAgreementRequest'}}}}, 'responses': {'201': {'description': '서약서 체결 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '서약서가 성공적으로 체결되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Item': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '전동 드릴'}, 'description': {'type': 'string', 'example': '고성능 전동 드릴입니다.'}, 'ownerId': {'type': 'integer', 'example': 1}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateItemRequest': {'type': 'object', 'required': ['name', 'description'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '전동 드릴'}, 'description': {'type': 'string', 'minLength': 10, 'example': '고성능 전동 드릴입니다.'}}}, 'UpdateItemRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '전동 드릴 업데이트'}, 'description': {'type': 'string', 'minLength': 10, 'example': '업데이트된 고성능 전동 드릴입니다.'}}}, 'CreateRentalRequest': {'type': 'object', 'required': ['itemId', 'renterId', 'rentalPeriod'], 'properties': {'itemId': {'type': 'integer', 'example': 1}, 'renterId': {'type': 'integer', 'example': 2}, 'rentalPeriod': {'type': 'string', 'example': '2024-01-20T10:00:00Z/2024-01-25T10:00:00Z'}}}, 'Rental': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'itemId': {'type': 'integer', 'example': 1}, 'renterId': {'type': 'integer', 'example': 2}, 'rentalPeriod': {'type': 'string', 'example': '2024-01-20T10:00:00Z/2024-01-25T10:00:00Z'}, 'status': {'type': 'string', 'example': 'pending'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateAgreementRequest': {'type': 'object', 'required': ['rentalId', 'terms'], 'properties': {'rentalId': {'type': 'integer', 'example': 1}, 'terms': {'type': 'string', 'example': '대여 조건에 동의합니다.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
18,"{'openapi': '3.0.0', 'info': {'title': 'Startup Consulting Platform API', 'version': '1.0.0', 'description': '예비 창업자를 위한 자영업자 컨설팅 플랫폼 API'}, 'servers': [{'url': 'https://api.startupconsulting.com/v1', 'description': 'Production server'}], 'paths': {'/consultations': {'get': {'summary': '컨설팅 목록 조회', 'description': '등록된 모든 컨설팅 목록을 조회합니다', 'tags': ['Consultations'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '컨설팅 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Consultation'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 컨설팅 생성', 'description': '새로운 컨설팅을 생성합니다', 'tags': ['Consultations'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateConsultationRequest'}}}}, 'responses': {'201': {'description': '컨설팅 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Consultation'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/consultations/{consultationId}': {'get': {'summary': '특정 컨설팅 조회', 'description': '컨설팅 ID로 특정 컨설팅 정보를 조회합니다', 'tags': ['Consultations'], 'parameters': [{'name': 'consultationId', 'in': 'path', 'required': True, 'description': '컨설팅 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '컨설팅 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Consultation'}}}}}}, '404': {'description': '컨설팅을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '컨설팅 정보 수정', 'description': '컨설팅 정보를 수정합니다', 'tags': ['Consultations'], 'parameters': [{'name': 'consultationId', 'in': 'path', 'required': True, 'description': '컨설팅 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateConsultationRequest'}}}}, 'responses': {'200': {'description': '컨설팅 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Consultation'}}}}}}, '404': {'description': '컨설팅을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '컨설팅 삭제', 'description': '컨설팅을 삭제합니다', 'tags': ['Consultations'], 'parameters': [{'name': 'consultationId', 'in': 'path', 'required': True, 'description': '컨설팅 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '컨설팅 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '컨설팅이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '컨설팅을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/requirements': {'post': {'summary': '요구사항 명세서 생성', 'description': '창업 목적에 따른 요구사항 명세서를 자동 생성합니다', 'tags': ['Requirements'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateRequirementsRequest'}}}}, 'responses': {'201': {'description': '요구사항 명세서 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Requirements'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/development-plans': {'post': {'summary': '애자일 개발 플랜 생성', 'description': '애자일 개발 플랜을 자동 생성합니다', 'tags': ['Development Plans'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateDevelopmentPlanRequest'}}}}, 'responses': {'201': {'description': '애자일 개발 플랜 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/DevelopmentPlan'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/recommendations': {'post': {'summary': '기술 및 인력 채용 추천', 'description': '필요한 기술 및 인력 채용을 추천합니다', 'tags': ['Recommendations'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateRecommendationRequest'}}}}, 'responses': {'201': {'description': '추천 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Recommendation'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Consultation': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '기초 회계 교육'}, 'description': {'type': 'string', 'example': '자영업자를 위한 기초 회계 교육입니다.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateConsultationRequest': {'type': 'object', 'required': ['title', 'description'], 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '기초 회계 교육'}, 'description': {'type': 'string', 'example': '자영업자를 위한 기초 회계 교육입니다.'}}}, 'UpdateConsultationRequest': {'type': 'object', 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '기초 회계 교육 수정'}, 'description': {'type': 'string', 'example': '수정된 자영업자를 위한 기초 회계 교육입니다.'}}}, 'CreateRequirementsRequest': {'type': 'object', 'required': ['purpose'], 'properties': {'purpose': {'type': 'string', 'example': '온라인 쇼핑몰 창업'}}}, 'Requirements': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'requirements': {'type': 'string', 'example': '필요한 기능: 사용자 관리, 결제 시스템, 상품 관리'}}}, 'CreateDevelopmentPlanRequest': {'type': 'object', 'required': ['requirementsId'], 'properties': {'requirementsId': {'type': 'integer', 'example': 1}}}, 'DevelopmentPlan': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'plan': {'type': 'string', 'example': '1단계: 요구사항 분석, 2단계: 프로토타입 개발'}}}, 'CreateRecommendationRequest': {'type': 'object', 'required': ['projectId'], 'properties': {'projectId': {'type': 'integer', 'example': 1}}}, 'Recommendation': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'recommendation': {'type': 'string', 'example': '프론트엔드 개발자, 백엔드 개발자 필요'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
19,"{'openapi': '3.0.0', 'info': {'title': 'AI Coding Learning Platform API', 'version': '1.0.0', 'description': '코딩 입문자를 위한 AI 기반 학습 플랫폼 API'}, 'servers': [{'url': 'https://api.learningplatform.com/v1', 'description': 'Production server'}], 'paths': {'/curriculums': {'get': {'summary': '커리큘럼 목록 조회', 'description': '사용자가 선택할 수 있는 모든 커리큘럼 목록을 조회합니다.', 'tags': ['Curriculums'], 'responses': {'200': {'description': '커리큘럼 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Curriculum'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 커리큘럼 생성', 'description': '사용자 맞춤형 커리큘럼을 생성합니다.', 'tags': ['Curriculums'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateCurriculumRequest'}}}}, 'responses': {'201': {'description': '커리큘럼 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Curriculum'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/curriculums/{curriculumId}': {'get': {'summary': '특정 커리큘럼 조회', 'description': '커리큘럼 ID로 특정 커리큘럼 정보를 조회합니다.', 'tags': ['Curriculums'], 'parameters': [{'name': 'curriculumId', 'in': 'path', 'required': True, 'description': '커리큘럼 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '커리큘럼 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Curriculum'}}}}}}, '404': {'description': '커리큘럼을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '커리큘럼 정보 수정', 'description': '커리큘럼 정보를 수정합니다.', 'tags': ['Curriculums'], 'parameters': [{'name': 'curriculumId', 'in': 'path', 'required': True, 'description': '커리큘럼 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateCurriculumRequest'}}}}, 'responses': {'200': {'description': '커리큘럼 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Curriculum'}}}}}}, '404': {'description': '커리큘럼을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '커리큘럼 삭제', 'description': '커리큘럼을 삭제합니다.', 'tags': ['Curriculums'], 'parameters': [{'name': 'curriculumId', 'in': 'path', 'required': True, 'description': '커리큘럼 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '커리큘럼 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '커리큘럼이 성공적으로 삭제되었습니다.'}}}}}}, '404': {'description': '커리큘럼을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/exercises': {'get': {'summary': '연습 문제 목록 조회', 'description': '사용자가 풀 수 있는 연습 문제 목록을 조회합니다.', 'tags': ['Exercises'], 'responses': {'200': {'description': '연습 문제 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Exercise'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Curriculum': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '기초 코딩 커리큘럼'}, 'description': {'type': 'string', 'example': '코딩 기초를 배우기 위한 커리큘럼입니다.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateCurriculumRequest': {'type': 'object', 'required': ['title', 'description'], 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '기초 코딩 커리큘럼'}, 'description': {'type': 'string', 'example': '코딩 기초를 배우기 위한 커리큘럼입니다.'}}}, 'UpdateCurriculumRequest': {'type': 'object', 'properties': {'title': {'type': 'string', 'minLength': 3, 'maxLength': 100, 'example': '업데이트된 기초 코딩 커리큘럼'}, 'description': {'type': 'string', 'example': '업데이트된 코딩 기초를 배우기 위한 커리큘럼입니다.'}}}, 'Exercise': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': 'Hello World 출력하기'}, 'difficulty': {'type': 'string', 'enum': ['easy', 'medium', 'hard'], 'example': 'easy'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
20,"{'openapi': '3.0.0', 'info': {'title': 'Music Recommendation API for Small Businesses', 'version': '1.0.0', 'description': '자영업자를 위한 음악 취향 분석 및 추천 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/recommendations': {'post': {'summary': '음악 추천', 'description': '매장 분위기, 타겟 고객, 공간 콘셉트를 기반으로 적절한 배경음악을 추천합니다.', 'tags': ['Recommendations'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'required': ['atmosphere', 'targetCustomer', 'concept'], 'properties': {'atmosphere': {'type': 'string', 'example': '편안한'}, 'targetCustomer': {'type': 'string', 'example': '젊은 성인'}, 'concept': {'type': 'string', 'example': '모던 카페'}, 'filters': {'type': 'object', 'properties': {'melody': {'type': 'boolean', 'example': True}, 'beat': {'type': 'boolean', 'example': True}}}}}}}, 'responses': {'200': {'description': '음악 추천 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Song'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/consulting': {'post': {'summary': 'AI 컨설팅 요청', 'description': '인테리어 콘셉트, 세무, 운영 등 자영업 전반에 대한 AI 컨설팅을 요청합니다.', 'tags': ['Consulting'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'required': ['businessType', 'concerns'], 'properties': {'businessType': {'type': 'string', 'example': '카페'}, 'concerns': {'type': 'array', 'items': {'type': 'string', 'example': '인테리어 개선'}}}}}}, 'responses': {'200': {'description': '컨설팅 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'recommendations': {'type': 'array', 'items': {'$ref': '#/components/schemas/ConsultingRecommendation'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}}, 'components': {'schemas': {'Song': {'type': 'object', 'properties': {'title': {'type': 'string', 'example': 'Chill Vibes'}, 'artist': {'type': 'string', 'example': 'DJ Relax'}, 'genre': {'type': 'string', 'example': 'Chillout'}, 'duration': {'type': 'string', 'example': '3:45'}, 'url': {'type': 'string', 'format': 'uri', 'example': 'https://music.example.com/chill-vibes'}}}, 'ConsultingRecommendation': {'type': 'object', 'properties': {'topic': {'type': 'string', 'example': '인테리어 디자인'}, 'advice': {'type': 'string', 'example': '자연광을 최대한 활용하세요.'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
21,"{'openapi': '3.0.0', 'info': {'title': 'Certification Study Management API', 'version': '1.0.0', 'description': '자격증 취득 및 학습 관리를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/goals': {'post': {'summary': '학습 목표 설정', 'description': '사용자가 목표 자격증과 학습 기간을 설정합니다.', 'tags': ['Goals'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SetGoalRequest'}}}}, 'responses': {'201': {'description': '목표 설정 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/GoalResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/schedule': {'get': {'summary': '공부 스케줄 조회', 'description': 'AI가 생성한 연간 공부 스케줄을 조회합니다.', 'tags': ['Schedule'], 'parameters': [{'name': 'goalId', 'in': 'query', 'required': True, 'description': '목표 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스케줄 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ScheduleResponse'}}}}, '404': {'description': '목표를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/activities': {'get': {'summary': '대외활동 제안 조회', 'description': '사용자에게 맞춤형 대외활동 및 공모전을 제안합니다.', 'tags': ['Activities'], 'parameters': [{'name': 'goalId', 'in': 'query', 'required': True, 'description': '목표 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '활동 제안 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ActivitiesResponse'}}}}, '404': {'description': '목표를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/materials': {'post': {'summary': '학습 자료 업로드', 'description': '학습 자료(PDF)를 업로드합니다.', 'tags': ['Materials'], 'requestBody': {'required': True, 'content': {'multipart/form-data': {'schema': {'$ref': '#/components/schemas/UploadMaterialRequest'}}}}, 'responses': {'201': {'description': '자료 업로드 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MaterialResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/questions': {'post': {'summary': '문제 생성 요청', 'description': '업로드한 자료를 기반으로 문제를 생성합니다.', 'tags': ['Questions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/GenerateQuestionsRequest'}}}}, 'responses': {'201': {'description': '문제 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/QuestionsResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/reminders': {'post': {'summary': '시험 일정 및 복습 타이밍 설정', 'description': '시험 일정과 복습 타이밍을 설정합니다.', 'tags': ['Reminders'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SetReminderRequest'}}}}, 'responses': {'201': {'description': '일정 설정 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ReminderResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'SetGoalRequest': {'type': 'object', 'required': ['certification', 'studyDuration'], 'properties': {'certification': {'type': 'string', 'example': '정보처리기사'}, 'studyDuration': {'type': 'integer', 'example': 12}}}, 'GoalResponse': {'type': 'object', 'properties': {'goalId': {'type': 'integer', 'example': 1}, 'status': {'type': 'string', 'example': 'success'}}}, 'ScheduleResponse': {'type': 'object', 'properties': {'schedule': {'type': 'array', 'items': {'type': 'object', 'properties': {'date': {'type': 'string', 'format': 'date', 'example': '2024-01-01'}, 'task': {'type': 'string', 'example': '기초 이론 학습'}}}}}}, 'ActivitiesResponse': {'type': 'object', 'properties': {'activities': {'type': 'array', 'items': {'type': 'object', 'properties': {'title': {'type': 'string', 'example': 'AI 공모전'}, 'description': {'type': 'string', 'example': 'AI 관련 프로젝트 공모전'}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-03-15'}}}}}}, 'UploadMaterialRequest': {'type': 'object', 'properties': {'file': {'type': 'string', 'format': 'binary'}, 'description': {'type': 'string', 'example': '자격증 학습 자료'}}}, 'MaterialResponse': {'type': 'object', 'properties': {'materialId': {'type': 'integer', 'example': 1}, 'status': {'type': 'string', 'example': 'success'}}}, 'GenerateQuestionsRequest': {'type': 'object', 'required': ['materialId', 'quantity', 'difficulty'], 'properties': {'materialId': {'type': 'integer', 'example': 1}, 'quantity': {'type': 'integer', 'example': 10}, 'difficulty': {'type': 'string', 'enum': ['high', 'medium', 'low'], 'example': 'medium'}}}, 'QuestionsResponse': {'type': 'object', 'properties': {'questions': {'type': 'array', 'items': {'type': 'object', 'properties': {'question': {'type': 'string', 'example': '자격증 취득을 위한 필수 과목은?'}, 'options': {'type': 'array', 'items': {'type': 'string'}}, 'answer': {'type': 'string', 'example': '정보처리'}}}}}}, 'SetReminderRequest': {'type': 'object', 'required': ['examDate', 'reviewTiming'], 'properties': {'examDate': {'type': 'string', 'format': 'date', 'example': '2024-06-01'}, 'reviewTiming': {'type': 'string', 'example': '2024-05-15'}}}, 'ReminderResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
22,"{'openapi': '3.0.0', 'info': {'title': 'Employee Trade API', 'version': '1.0.0', 'description': '직원 트레이드를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/employees': {'get': {'summary': '직원 목록 조회', 'description': '등록된 모든 직원 목록을 조회합니다', 'tags': ['Employees'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '직원 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Employee'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 직원 등록', 'description': '새로운 직원을 등록합니다', 'tags': ['Employees'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateEmployeeRequest'}}}}, 'responses': {'201': {'description': '직원 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Employee'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/employees/{employeeId}': {'get': {'summary': '특정 직원 조회', 'description': '직원 ID로 특정 직원 정보를 조회합니다', 'tags': ['Employees'], 'parameters': [{'name': 'employeeId', 'in': 'path', 'required': True, 'description': '직원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '직원 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Employee'}}}}}}, '404': {'description': '직원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '직원 정보 수정', 'description': '직원 정보를 수정합니다', 'tags': ['Employees'], 'parameters': [{'name': 'employeeId', 'in': 'path', 'required': True, 'description': '직원 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateEmployeeRequest'}}}}, 'responses': {'200': {'description': '직원 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Employee'}}}}}}, '404': {'description': '직원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '직원 삭제', 'description': '직원을 삭제합니다', 'tags': ['Employees'], 'parameters': [{'name': 'employeeId', 'in': 'path', 'required': True, 'description': '직원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '직원 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '직원이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '직원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/trades': {'post': {'summary': '직원 트레이드 요청', 'description': '직원 간 트레이드를 요청합니다', 'tags': ['Trades'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TradeRequest'}}}}, 'responses': {'201': {'description': '트레이드 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Trade'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Employee': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'John Doe'}, 'position': {'type': 'string', 'example': 'Software Engineer'}, 'department': {'type': 'string', 'example': 'Engineering'}, 'skills': {'type': 'array', 'items': {'type': 'string'}, 'example': ['Java', 'Python', 'Machine Learning']}, 'culturalFit': {'type': 'string', 'example': 'High'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateEmployeeRequest': {'type': 'object', 'required': ['name', 'position', 'department'], 'properties': {'name': {'type': 'string', 'example': 'John Doe'}, 'position': {'type': 'string', 'example': 'Software Engineer'}, 'department': {'type': 'string', 'example': 'Engineering'}, 'skills': {'type': 'array', 'items': {'type': 'string'}, 'example': ['Java', 'Python']}}}, 'UpdateEmployeeRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': 'John Doe Updated'}, 'position': {'type': 'string', 'example': 'Senior Software Engineer'}, 'department': {'type': 'string', 'example': 'Engineering'}, 'skills': {'type': 'array', 'items': {'type': 'string'}, 'example': ['Java', 'Python', 'AI']}}}, 'TradeRequest': {'type': 'object', 'required': ['employeeIdFrom', 'employeeIdTo'], 'properties': {'employeeIdFrom': {'type': 'integer', 'example': 1}, 'employeeIdTo': {'type': 'integer', 'example': 2}, 'reason': {'type': 'string', 'example': 'Cultural fit mismatch'}}}, 'Trade': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'employeeIdFrom': {'type': 'integer', 'example': 1}, 'employeeIdTo': {'type': 'integer', 'example': 2}, 'status': {'type': 'string', 'example': 'pending'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
23,"{'openapi': '3.0.0', 'info': {'title': 'Real-time Sensor Monitoring API', 'version': '1.0.0', 'description': '실시간 센서 모니터링을 위한 API'}, 'servers': [{'url': 'http://localhost:5000/v1', 'description': 'Development server'}], 'paths': {'/sensors': {'get': {'summary': '센서 목록 조회', 'description': '등록된 모든 센서 목록을 조회합니다', 'tags': ['Sensors'], 'responses': {'200': {'description': '센서 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Sensor'}}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/sensors/{sensorId}/data': {'get': {'summary': '특정 센서 데이터 조회', 'description': '센서 ID로 특정 센서의 실시간 데이터를 조회합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '센서 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SensorData'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/sensors/{sensorId}/settings': {'put': {'summary': '센서 설정 수정', 'description': '센서의 설정을 수정합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SensorSettings'}}}}, 'responses': {'200': {'description': '센서 설정 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '센서 설정이 성공적으로 수정되었습니다'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/logs': {'post': {'summary': '로그 저장', 'description': '센서 데이터를 로그로 저장합니다', 'tags': ['Logs'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LogEntry'}}}}, 'responses': {'201': {'description': '로그 저장 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '로그가 성공적으로 저장되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/logs/share': {'post': {'summary': '로그 공유', 'description': '생성된 로그 파일을 압축하여 외부로 전송합니다', 'tags': ['Logs'], 'responses': {'200': {'description': '로그 공유 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '로그 파일이 성공적으로 공유되었습니다'}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Sensor': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'Gas Sensor 1'}, 'ip': {'type': 'string', 'format': 'ipv4', 'example': '192.168.1.10'}, 'status': {'type': 'string', 'example': 'active'}}}, 'SensorData': {'type': 'object', 'properties': {'voltage': {'type': 'number', 'format': 'float', 'example': 3.3}, 'resistance': {'type': 'number', 'format': 'float', 'example': 1000}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'SensorSettings': {'type': 'object', 'properties': {'rlValue': {'type': 'number', 'format': 'float', 'example': 10.0}}}, 'LogEntry': {'type': 'object', 'properties': {'sensorId': {'type': 'integer', 'example': 1}, 'voltage': {'type': 'number', 'format': 'float', 'example': 3.3}, 'resistance': {'type': 'number', 'format': 'float', 'example': 1000}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
24,"{'openapi': '3.0.0', 'info': {'title': 'Project Management API', 'version': '1.0.0', 'description': '프로젝트 관리를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/projects': {'get': {'summary': '프로젝트 목록 조회', 'description': '등록된 모든 프로젝트 목록을 조회합니다', 'tags': ['Projects'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '프로젝트 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Project'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 프로젝트 생성', 'description': '새로운 프로젝트를 생성합니다', 'tags': ['Projects'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateProjectRequest'}}}}, 'responses': {'201': {'description': '프로젝트 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Project'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/projects/{projectId}': {'get': {'summary': '특정 프로젝트 조회', 'description': '프로젝트 ID로 특정 프로젝트 정보를 조회합니다', 'tags': ['Projects'], 'parameters': [{'name': 'projectId', 'in': 'path', 'required': True, 'description': '프로젝트 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '프로젝트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Project'}}}}}}, '404': {'description': '프로젝트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '프로젝트 정보 수정', 'description': '프로젝트 정보를 수정합니다', 'tags': ['Projects'], 'parameters': [{'name': 'projectId', 'in': 'path', 'required': True, 'description': '프로젝트 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateProjectRequest'}}}}, 'responses': {'200': {'description': '프로젝트 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Project'}}}}}}, '404': {'description': '프로젝트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '프로젝트 삭제', 'description': '프로젝트를 삭제합니다', 'tags': ['Projects'], 'parameters': [{'name': 'projectId', 'in': 'path', 'required': True, 'description': '프로젝트 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '프로젝트 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '프로젝트가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '프로젝트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/workspaces': {'post': {'summary': '워크 스페이스 생성', 'description': '새로운 워크 스페이스를 생성합니다', 'tags': ['Workspaces'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateWorkspaceRequest'}}}}, 'responses': {'201': {'description': '워크 스페이스 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Workspace'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/workspaces/{workspaceId}/invite': {'post': {'summary': '팀원 초대', 'description': '워크 스페이스에 팀원을 초대합니다', 'tags': ['Workspaces'], 'parameters': [{'name': 'workspaceId', 'in': 'path', 'required': True, 'description': '워크 스페이스 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/InviteTeamMemberRequest'}}}}, 'responses': {'200': {'description': '팀원 초대 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '팀원이 성공적으로 초대되었습니다'}}}}}}, '404': {'description': '워크 스페이스를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Project': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '프로젝트 A'}, 'description': {'type': 'string', 'example': '이 프로젝트는 AI 기반의 요약 및 정리 기능을 포함합니다.'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateProjectRequest': {'type': 'object', 'required': ['name', 'description'], 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '프로젝트 A'}, 'description': {'type': 'string', 'example': '이 프로젝트는 AI 기반의 요약 및 정리 기능을 포함합니다.'}}}, 'UpdateProjectRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '프로젝트 A 수정'}, 'description': {'type': 'string', 'example': '수정된 프로젝트 설명입니다.'}}}, 'CreateWorkspaceRequest': {'type': 'object', 'required': ['name'], 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '워크 스페이스 A'}, 'viewType': {'type': 'string', 'enum': ['table', 'kanban', 'gantt'], 'default': 'table'}}}, 'Workspace': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '워크 스페이스 A'}, 'viewType': {'type': 'string', 'example': 'table'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'InviteTeamMemberRequest': {'type': 'object', 'required': ['email'], 'properties': {'email': {'type': 'string', 'format': 'email', 'example': 'team_member@example.com'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
25,"{'openapi': '3.0.0', 'info': {'title': 'Marriage Encouragement Platform API', 'version': '1.0.0', 'description': '미혼남녀 및 결혼 희망자를 위한 결혼 장려 플랫폼 API'}, 'servers': [{'url': 'https://api.marriage-platform.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다.', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}': {'get': {'summary': '특정 사용자 조회', 'description': '사용자 ID로 특정 사용자 정보를 조회합니다.', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '사용자 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '사용자 정보 수정', 'description': '사용자 정보를 수정합니다.', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateUserRequest'}}}}, 'responses': {'200': {'description': '사용자 정보 수정 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/matches': {'post': {'summary': 'AI 매칭 요청', 'description': '사용자 정보를 기반으로 AI 매칭을 요청합니다.', 'tags': ['Matches'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MatchRequest'}}}}, 'responses': {'200': {'description': '매칭 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MatchResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/simulations': {'post': {'summary': '연애 시뮬레이션 시작', 'description': '연애 시뮬레이션을 시작합니다.', 'tags': ['Simulations'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SimulationRequest'}}}}, 'responses': {'200': {'description': '시뮬레이션 시작 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SimulationResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '홍길동'}, 'age': {'type': 'integer', 'example': 28}, 'gender': {'type': 'string', 'enum': ['male', 'female'], 'example': 'male'}, 'occupation': {'type': 'string', 'example': '소프트웨어 엔지니어'}, 'financialStatus': {'type': 'string', 'example': '안정적'}, 'familyStatus': {'type': 'string', 'example': '부모님과 함께 거주'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['name', 'age', 'gender', 'occupation', 'financialStatus', 'familyStatus'], 'properties': {'name': {'type': 'string', 'example': '홍길동'}, 'age': {'type': 'integer', 'example': 28}, 'gender': {'type': 'string', 'enum': ['male', 'female'], 'example': 'male'}, 'occupation': {'type': 'string', 'example': '소프트웨어 엔지니어'}, 'financialStatus': {'type': 'string', 'example': '안정적'}, 'familyStatus': {'type': 'string', 'example': '부모님과 함께 거주'}}}, 'UpdateUserRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': '홍길동 수정'}, 'age': {'type': 'integer', 'example': 29}, 'occupation': {'type': 'string', 'example': '시니어 소프트웨어 엔지니어'}}}, 'MatchRequest': {'type': 'object', 'required': ['userId'], 'properties': {'userId': {'type': 'integer', 'example': 1}}}, 'MatchResponse': {'type': 'object', 'properties': {'matches': {'type': 'array', 'items': {'$ref': '#/components/schemas/User'}}}}, 'SimulationRequest': {'type': 'object', 'required': ['userId'], 'properties': {'userId': {'type': 'integer', 'example': 1}}}, 'SimulationResponse': {'type': 'object', 'properties': {'simulationId': {'type': 'string', 'example': 'simulation_12345'}, 'status': {'type': 'string', 'example': '진행 중'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
26,"{'openapi': '3.0.0', 'info': {'title': 'Contextual Grammar Correction API', 'version': '1.0.0', 'description': '문맥을 이해하고 문법을 교정하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/correct': {'post': {'summary': '문장 교정', 'description': '주어진 문장을 문맥적으로 교정합니다.', 'tags': ['Correction'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'text': {'type': 'string', 'description': '교정할 문장', 'example': 'This is a example of a sentence that need correction.'}}, 'required': ['text']}}}, 'responses': {'200': {'description': '문장 교정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'correctedText': {'type': 'string', 'example': 'This is an example of a sentence that needs correction.'}, 'suggestions': {'type': 'array', 'items': {'type': 'string', 'example': ""Consider using 'an' instead of 'a'.""}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/check': {'post': {'summary': '문맥 체크', 'description': '주어진 문장의 문맥을 체크하고 피드백을 제공합니다.', 'tags': ['Context Check'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'text': {'type': 'string', 'description': '체크할 문장', 'example': 'The weather is nice, I will go to the park.'}}, 'required': ['text']}}}, 'responses': {'200': {'description': '문맥 체크 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'feedback': {'type': 'string', 'example': 'Consider adding a conjunction to improve flow.'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'INVALID_REQUEST'}}}}}}"
27,"{'openapi': '3.0.0', 'info': {'title': 'Indoor Air Quality Monitoring and Prediction API', 'version': '1.0.0', 'description': '실내 공기질 측정 및 예측 시스템을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/air-quality': {'get': {'summary': '현재 실내 공기질 조회', 'description': '현재 실내 공기질 데이터를 조회합니다.', 'tags': ['Air Quality'], 'responses': {'200': {'description': '공기질 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AirQuality'}}}}}}, '404': {'description': '데이터를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/air-quality/predict': {'post': {'summary': '실내 공기질 예측', 'description': '딥러닝 모델을 사용하여 실내 공기질을 예측합니다.', 'tags': ['Air Quality'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictAirQualityRequest'}}}}, 'responses': {'200': {'description': '공기질 예측 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'predictedQuality': {'$ref': '#/components/schemas/AirQualityPrediction'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/ventilation/advice': {'get': {'summary': '환기 여부 판단', 'description': '외부 공기질과 비교하여 환기 여부를 판단합니다.', 'tags': ['Ventilation'], 'responses': {'200': {'description': '환기 여부 판단 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'advice': {'type': 'string', 'example': '창문을 열지 마세요.'}}}}}}, '404': {'description': '데이터를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'AirQuality': {'type': 'object', 'properties': {'temperature': {'type': 'number', 'format': 'float', 'example': 22.5}, 'humidity': {'type': 'number', 'format': 'float', 'example': 45.0}, 'co2': {'type': 'integer', 'example': 400}, 'pm25': {'type': 'integer', 'example': 15}, 'pm10': {'type': 'integer', 'example': 20}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'PredictAirQualityRequest': {'type': 'object', 'properties': {'sensorData': {'type': 'object', 'properties': {'temperature': {'type': 'number', 'format': 'float', 'example': 22.5}, 'humidity': {'type': 'number', 'format': 'float', 'example': 45.0}, 'co2': {'type': 'integer', 'example': 400}, 'pm25': {'type': 'integer', 'example': 15}, 'pm10': {'type': 'integer', 'example': 20}}}}}, 'AirQualityPrediction': {'type': 'object', 'properties': {'predictedTemperature': {'type': 'number', 'format': 'float', 'example': 23.0}, 'predictedHumidity': {'type': 'number', 'format': 'float', 'example': 50.0}, 'predictedCo2': {'type': 'integer', 'example': 450}, 'predictedPm25': {'type': 'integer', 'example': 10}, 'predictedPm10': {'type': 'integer', 'example': 15}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
28,"{'openapi': '3.0.0', 'info': {'title': 'Handwriting Font Generator API', 'version': '1.0.0', 'description': '사용자의 필체를 학습하여 다양한 스타일의 손글씨로 변환하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/fonts': {'post': {'summary': '손글씨 폰트 생성', 'description': '사용자의 필체 데이터를 기반으로 손글씨 폰트를 생성합니다.', 'tags': ['Fonts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateFontRequest'}}}}, 'responses': {'201': {'description': '손글씨 폰트 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Font'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/fonts/{fontId}': {'get': {'summary': '특정 손글씨 폰트 조회', 'description': '생성된 손글씨 폰트를 조회합니다.', 'tags': ['Fonts'], 'parameters': [{'name': 'fontId', 'in': 'path', 'required': True, 'description': '폰트 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '폰트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Font'}}}}}}, '404': {'description': '폰트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/fonts/{fontId}/preview': {'get': {'summary': '폰트 미리보기', 'description': '특정 손글씨 폰트의 미리보기를 제공합니다.', 'tags': ['Fonts'], 'parameters': [{'name': 'fontId', 'in': 'path', 'required': True, 'description': '폰트 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '폰트 미리보기 성공', 'content': {'image/png': {'schema': {'type': 'string', 'format': 'binary'}}}}, '404': {'description': '폰트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'CreateFontRequest': {'type': 'object', 'required': ['userId', 'handwritingSamples'], 'properties': {'userId': {'type': 'string', 'example': 'user123'}, 'handwritingSamples': {'type': 'array', 'items': {'type': 'string', 'format': 'binary'}}}}, 'Font': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'font123'}, 'userId': {'type': 'string', 'example': 'user123'}, 'fontUrl': {'type': 'string', 'example': 'https://api.example.com/fonts/font123.ttf'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
29,"{'openapi': '3.0.0', 'info': {'title': 'Anomaly Detection API', 'version': '1.0.0', 'description': '제품 이상 판별을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/models': {'post': {'summary': '모델 학습', 'description': '주어진 데이터로 이상 판별 모델을 학습합니다.', 'tags': ['Models'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TrainModelRequest'}}}}, 'responses': {'201': {'description': '모델 학습 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TrainModelResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/models/{modelId}/evaluate': {'post': {'summary': '모델 평가', 'description': '학습된 모델을 평가하고 성능 지표를 반환합니다.', 'tags': ['Models'], 'parameters': [{'name': 'modelId', 'in': 'path', 'required': True, 'description': '모델 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EvaluateModelRequest'}}}}, 'responses': {'200': {'description': '모델 평가 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/EvaluateModelResponse'}}}}, '404': {'description': '모델을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/data/preprocess': {'post': {'summary': '데이터 전처리', 'description': '주어진 데이터를 전처리합니다.', 'tags': ['Data'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PreprocessDataRequest'}}}}, 'responses': {'200': {'description': '데이터 전처리 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PreprocessDataResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'TrainModelRequest': {'type': 'object', 'required': ['data'], 'properties': {'data': {'type': 'array', 'items': {'type': 'object'}}, 'modelType': {'type': 'string', 'enum': ['XGBoost', 'RandomForest', 'SVM'], 'example': 'XGBoost'}}}, 'TrainModelResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'modelId': {'type': 'string', 'example': 'model_12345'}}}, 'EvaluateModelRequest': {'type': 'object', 'required': ['testData'], 'properties': {'testData': {'type': 'array', 'items': {'type': 'object'}}}}, 'EvaluateModelResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'f1Score': {'type': 'number', 'example': 0.85}, 'accuracy': {'type': 'number', 'example': 0.9}}}, 'PreprocessDataRequest': {'type': 'object', 'required': ['rawData'], 'properties': {'rawData': {'type': 'array', 'items': {'type': 'object'}}}}, 'PreprocessDataResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'processedData': {'type': 'array', 'items': {'type': 'object'}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
30,"{'openapi': '3.0.0', 'info': {'title': 'IoT Energy Efficiency Optimization API', 'version': '1.0.0', 'description': 'IoT 센서 데이터를 활용한 에너지 효율 최적화 분석 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/energy-usage': {'get': {'summary': '에너지 사용 패턴 조회', 'description': '건물 내 에너지 사용 패턴을 조회합니다.', 'tags': ['Energy'], 'parameters': [{'name': 'buildingId', 'in': 'query', 'description': '건물 ID', 'required': True, 'schema': {'type': 'string'}}, {'name': 'startDate', 'in': 'query', 'description': '조회 시작 날짜 (YYYY-MM-DD)', 'required': True, 'schema': {'type': 'string', 'format': 'date'}}, {'name': 'endDate', 'in': 'query', 'description': '조회 종료 날짜 (YYYY-MM-DD)', 'required': True, 'schema': {'type': 'string', 'format': 'date'}}], 'responses': {'200': {'description': '에너지 사용 패턴 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/EnergyUsage'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/energy-usage/cluster': {'post': {'summary': '에너지 소비 군집화', 'description': 'KMeans 알고리즘을 사용하여 에너지 소비 패턴을 군집화합니다.', 'tags': ['Energy'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ClusterRequest'}}}}, 'responses': {'200': {'description': '군집화 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'clusters': {'type': 'array', 'items': {'$ref': '#/components/schemas/Cluster'}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/energy-usage/simulation': {'post': {'summary': '실시간 데이터 스트림 시뮬레이션', 'description': '실시간 데이터 스트림 구조를 설계하고 시뮬레이션합니다.', 'tags': ['Energy'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SimulationRequest'}}}}, 'responses': {'200': {'description': '시뮬레이션 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'simulationResult': {'type': 'object', 'properties': {'energySavings': {'type': 'number', 'example': 15.5}, 'recommendations': {'type': 'array', 'items': {'type': 'string'}}}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'EnergyUsage': {'type': 'object', 'properties': {'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'usage': {'type': 'number', 'example': 120.5}}}, 'ClusterRequest': {'type': 'object', 'properties': {'buildingId': {'type': 'string', 'example': 'building_1'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'timestamp': {'type': 'string', 'format': 'date-time'}, 'usage': {'type': 'number'}}}}}}, 'Cluster': {'type': 'object', 'properties': {'clusterId': {'type': 'integer', 'example': 1}, 'members': {'type': 'array', 'items': {'type': 'string'}}}}, 'SimulationRequest': {'type': 'object', 'properties': {'buildingId': {'type': 'string', 'example': 'building_1'}, 'parameters': {'type': 'object', 'properties': {'duration': {'type': 'integer', 'example': 30}, 'frequency': {'type': 'integer', 'example': 5}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
31,"{'openapi': '3.0.0', 'info': {'title': 'Autonomous Beach Trash Collection RC Car API', 'version': '1.0.0', 'description': '자율주행 기반 해변 쓰레기 수거 RC카를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/rc_car/status': {'get': {'summary': 'RC카 상태 조회', 'description': '현재 RC카의 상태를 조회합니다', 'tags': ['RC Car'], 'responses': {'200': {'description': '상태 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'operational'}, 'batteryLevel': {'type': 'integer', 'example': 85}, 'location': {'type': 'object', 'properties': {'latitude': {'type': 'number', 'example': 34.123456}, 'longitude': {'type': 'number', 'example': -118.123456}}}}}}}}, '404': {'description': 'RC카를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/rc_car/command': {'post': {'summary': 'RC카 명령 전송', 'description': 'RC카에 명령을 전송하여 동작을 제어합니다', 'tags': ['RC Car'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CommandRequest'}}}}, 'responses': {'200': {'description': '명령 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '명령이 성공적으로 전송되었습니다'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/rc_car/vision': {'post': {'summary': '비전 데이터 전송', 'description': 'RC카의 카메라에서 수집한 비전 데이터를 전송합니다', 'tags': ['RC Car'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/VisionDataRequest'}}}}, 'responses': {'200': {'description': '비전 데이터 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '비전 데이터가 성공적으로 전송되었습니다'}}}}}}, '400': {'description': '잘못된 비전 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'CommandRequest': {'type': 'object', 'required': ['command'], 'properties': {'command': {'type': 'string', 'enum': ['start', 'stop', 'collect_trash'], 'example': 'start'}}}, 'VisionDataRequest': {'type': 'object', 'required': ['image'], 'properties': {'image': {'type': 'string', 'format': 'binary', 'example': 'base64_encoded_image_data'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'INVALID_REQUEST'}}}}}}"
32,"{'openapi': '3.0.0', 'info': {'title': 'Smart Bus Stop Location Selection API', 'version': '1.0.0', 'description': '대전 스마트 버스 정류장 최적 입지선정 시스템을 위한 API'}, 'servers': [{'url': 'https://api.daejeonbusstop.com/v1', 'description': 'Production server'}], 'paths': {'/bus-stops': {'get': {'summary': '버스 정류장 목록 조회', 'description': '모든 버스 정류장 목록을 조회합니다.', 'tags': ['Bus Stops'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '버스 정류장 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/BusStop'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 버스 정류장 생성', 'description': '새로운 버스 정류장을 생성합니다.', 'tags': ['Bus Stops'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateBusStopRequest'}}}}, 'responses': {'201': {'description': '버스 정류장 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/BusStop'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/bus-stops/{busStopId}': {'get': {'summary': '특정 버스 정류장 조회', 'description': '버스 정류장 ID로 특정 버스 정류장 정보를 조회합니다.', 'tags': ['Bus Stops'], 'parameters': [{'name': 'busStopId', 'in': 'path', 'required': True, 'description': '버스 정류장 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '버스 정류장 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/BusStop'}}}}}}, '404': {'description': '버스 정류장을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '버스 정류장 정보 수정', 'description': '버스 정류장 정보를 수정합니다.', 'tags': ['Bus Stops'], 'parameters': [{'name': 'busStopId', 'in': 'path', 'required': True, 'description': '버스 정류장 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateBusStopRequest'}}}}, 'responses': {'200': {'description': '버스 정류장 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/BusStop'}}}}}}, '404': {'description': '버스 정류장을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '버스 정류장 삭제', 'description': '버스 정류장을 삭제합니다.', 'tags': ['Bus Stops'], 'parameters': [{'name': 'busStopId', 'in': 'path', 'required': True, 'description': '버스 정류장 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '버스 정류장 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '버스 정류장이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '버스 정류장을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/bus-stops/optimal-location': {'post': {'summary': '최적 버스 정류장 위치 선정', 'description': '주성분 분석 및 군집 분석을 통해 최적의 버스 정류장 위치를 선정합니다.', 'tags': ['Bus Stops'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OptimalLocationRequest'}}}}, 'responses': {'200': {'description': '최적 위치 선정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/OptimalLocation'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'BusStop': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '중앙로 버스 정류장'}, 'location': {'type': 'object', 'properties': {'latitude': {'type': 'number', 'example': 36.3504}, 'longitude': {'type': 'number', 'example': 127.3845}}}, 'features': {'type': 'array', 'items': {'type': 'string', 'example': '공기정화시스템'}}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateBusStopRequest': {'type': 'object', 'required': ['name', 'location'], 'properties': {'name': {'type': 'string', 'example': '중앙로 버스 정류장'}, 'location': {'type': 'object', 'required': ['latitude', 'longitude'], 'properties': {'latitude': {'type': 'number', 'example': 36.3504}, 'longitude': {'type': 'number', 'example': 127.3845}}}, 'features': {'type': 'array', 'items': {'type': 'string', 'example': '공기정화시스템'}}}}, 'UpdateBusStopRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': '중앙로 버스 정류장 수정'}, 'location': {'type': 'object', 'properties': {'latitude': {'type': 'number', 'example': 36.3504}, 'longitude': {'type': 'number', 'example': 127.3845}}}, 'features': {'type': 'array', 'items': {'type': 'string', 'example': '공기정화시스템'}}}}, 'OptimalLocationRequest': {'type': 'object', 'required': ['criteria'], 'properties': {'criteria': {'type': 'object', 'properties': {'populationDensity': {'type': 'number', 'example': 3000}, 'pollutionLevel': {'type': 'number', 'example': 75}, 'citizenFeedback': {'type': 'array', 'items': {'type': 'string', 'example': '버스 정류장 위치 개선 필요'}}}}}}, 'OptimalLocation': {'type': 'object', 'properties': {'location': {'type': 'object', 'properties': {'latitude': {'type': 'number', 'example': 36.3504}, 'longitude': {'type': 'number', 'example': 127.3845}}}, 'justification': {'type': 'string', 'example': '인구 밀집 지역과 대기오염이 심한 지역을 고려하여 선정됨.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
33,"{'openapi': '3.0.0', 'info': {'title': 'Energy Efficiency Optimization API', 'version': '1.0.0', 'description': '실내 환경 데이터를 기반으로 에너지 효율을 최적화하는 시스템'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/sensors': {'get': {'summary': '센서 데이터 목록 조회', 'description': '등록된 모든 센서의 데이터를 조회합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '센서 데이터 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/SensorData'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 센서 데이터 생성', 'description': '새로운 센서 데이터를 생성합니다', 'tags': ['Sensors'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateSensorDataRequest'}}}}, 'responses': {'201': {'description': '센서 데이터 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SensorData'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/sensors/{sensorId}': {'get': {'summary': '특정 센서 데이터 조회', 'description': '센서 ID로 특정 센서 데이터를 조회합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '센서 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SensorData'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '센서 데이터 수정', 'description': '센서 데이터를 수정합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateSensorDataRequest'}}}}, 'responses': {'200': {'description': '센서 데이터 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SensorData'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '센서 데이터 삭제', 'description': '센서 데이터를 삭제합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '센서 데이터 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '센서 데이터가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/analytics/patterns': {'get': {'summary': '에너지 낭비 패턴 분석 결과 조회', 'description': '에너지 낭비 패턴 분석 결과를 조회합니다', 'tags': ['Analytics'], 'responses': {'200': {'description': '패턴 분석 결과 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/EnergyWastePattern'}}}}}}}, '404': {'description': '패턴을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'SensorData': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'temperature': {'type': 'number', 'format': 'float', 'example': 22.5}, 'humidity': {'type': 'number', 'format': 'float', 'example': 45.0}, 'light': {'type': 'number', 'format': 'float', 'example': 300.0}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateSensorDataRequest': {'type': 'object', 'required': ['temperature', 'humidity', 'light'], 'properties': {'temperature': {'type': 'number', 'format': 'float', 'example': 22.5}, 'humidity': {'type': 'number', 'format': 'float', 'example': 45.0}, 'light': {'type': 'number', 'format': 'float', 'example': 300.0}}}, 'UpdateSensorDataRequest': {'type': 'object', 'properties': {'temperature': {'type': 'number', 'format': 'float', 'example': 23.0}, 'humidity': {'type': 'number', 'format': 'float', 'example': 50.0}, 'light': {'type': 'number', 'format': 'float', 'example': 350.0}}}, 'EnergyWastePattern': {'type': 'object', 'properties': {'patternId': {'type': 'integer', 'example': 1}, 'description': {'type': 'string', 'example': '오후 2시에서 4시 사이에 에너지 낭비 발생'}, 'recommendation': {'type': 'string', 'example': '조명을 자동으로 끄도록 설정'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
34,"{'openapi': '3.0.0', 'info': {'title': 'Autonomous Vehicle Traffic Signal API', 'version': '1.0.0', 'description': '자율주행 차량의 교통 신호 데이터를 실시간으로 반영하여 경로를 최적화하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/traffic-signals': {'get': {'summary': '교통 신호 목록 조회', 'description': '현재 교통 신호 상태를 조회합니다.', 'tags': ['Traffic Signals'], 'responses': {'200': {'description': '교통 신호 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/TrafficSignal'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/traffic-signals/{signalId}': {'get': {'summary': '특정 교통 신호 조회', 'description': '교통 신호 ID로 특정 교통 신호 정보를 조회합니다.', 'tags': ['Traffic Signals'], 'parameters': [{'name': 'signalId', 'in': 'path', 'required': True, 'description': '교통 신호 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '교통 신호 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/TrafficSignal'}}}}}}, '404': {'description': '교통 신호를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/routes/optimize': {'post': {'summary': '경로 최적화 요청', 'description': '교통 신호 데이터를 기반으로 경로를 최적화합니다.', 'tags': ['Routes'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OptimizeRouteRequest'}}}}, 'responses': {'200': {'description': '경로 최적화 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'optimizedRoute': {'$ref': '#/components/schemas/OptimizedRoute'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'TrafficSignal': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'signal_1'}, 'location': {'type': 'string', 'example': 'Intersection of 5th Ave and Main St'}, 'status': {'type': 'string', 'enum': ['red', 'green', 'yellow'], 'example': 'green'}, 'lastUpdated': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'OptimizeRouteRequest': {'type': 'object', 'required': ['startLocation', 'endLocation'], 'properties': {'startLocation': {'type': 'string', 'example': '5th Ave and Main St'}, 'endLocation': {'type': 'string', 'example': '10th Ave and 1st St'}, 'currentTrafficConditions': {'type': 'object', 'properties': {'signalData': {'type': 'array', 'items': {'$ref': '#/components/schemas/TrafficSignal'}}, 'congestionLevel': {'type': 'string', 'enum': ['low', 'medium', 'high'], 'example': 'medium'}}}}}, 'OptimizedRoute': {'type': 'object', 'properties': {'route': {'type': 'array', 'items': {'type': 'string', 'example': '5th Ave -> 6th Ave -> 7th Ave'}}, 'estimatedTime': {'type': 'string', 'example': '15 minutes'}, 'fuelConsumption': {'type': 'number', 'example': 1.2}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
35,"{'openapi': '3.0.0', 'info': {'title': 'Consumer Behavior Analysis and Recommendation API', 'version': '1.0.0', 'description': '소비자 행동 데이터를 기반으로 실시간 피드백 분석 및 맞춤형 추천 제공 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/feedback': {'post': {'summary': '소비자 행동 데이터 수집', 'description': '제품 사용 중 수집된 소비자 행동 데이터를 서버에 전송합니다.', 'tags': ['Feedback'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/FeedbackRequest'}}}}, 'responses': {'201': {'description': '데이터 수집 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '소비자 행동 데이터가 성공적으로 수집되었습니다.'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/recommendations': {'get': {'summary': '맞춤형 추천 조회', 'description': '소비자 행동 데이터를 기반으로 맞춤형 추천을 조회합니다.', 'tags': ['Recommendations'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '추천 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Recommendation'}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/feedback/{feedbackId}': {'get': {'summary': '특정 소비자 행동 데이터 조회', 'description': '특정 피드백 ID로 소비자 행동 데이터를 조회합니다.', 'tags': ['Feedback'], 'parameters': [{'name': 'feedbackId', 'in': 'path', 'required': True, 'description': '피드백 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '피드백 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Feedback'}}}}}}, '404': {'description': '피드백을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'FeedbackRequest': {'type': 'object', 'required': ['userId', 'productId', 'usageTime', 'frequency', 'reaction'], 'properties': {'userId': {'type': 'string', 'example': 'user123'}, 'productId': {'type': 'string', 'example': 'product456'}, 'usageTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'frequency': {'type': 'integer', 'example': 5}, 'reaction': {'type': 'string', 'example': 'positive'}}}, 'Recommendation': {'type': 'object', 'properties': {'productId': {'type': 'string', 'example': 'product789'}, 'reason': {'type': 'string', 'example': '사용자의 선호도에 기반한 추천'}}}, 'Feedback': {'type': 'object', 'properties': {'feedbackId': {'type': 'string', 'example': 'feedback123'}, 'userId': {'type': 'string', 'example': 'user123'}, 'productId': {'type': 'string', 'example': 'product456'}, 'usageTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'frequency': {'type': 'integer', 'example': 5}, 'reaction': {'type': 'string', 'example': 'positive'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
36,"{'openapi': '3.0.0', 'info': {'title': 'Fraud Detection API', 'version': '1.0.0', 'description': '거래 데이터를 기반으로 이상 거래를 실시간으로 탐지하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/transactions': {'post': {'summary': '거래 데이터 전송', 'description': '새로운 거래 데이터를 전송하여 이상 거래를 탐지합니다.', 'tags': ['Transactions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TransactionRequest'}}}}, 'responses': {'200': {'description': '거래 데이터 처리 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TransactionResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'get': {'summary': '이상 거래 알림 조회', 'description': '발생한 이상 거래 알림 목록을 조회합니다.', 'tags': ['Alerts'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '알림 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '404': {'description': '알림을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'TransactionRequest': {'type': 'object', 'required': ['timestamp', 'location', 'amount'], 'properties': {'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'location': {'type': 'string', 'example': 'Seoul, South Korea'}, 'amount': {'type': 'number', 'format': 'float', 'example': 150.75}, 'cardId': {'type': 'string', 'example': '1234-5678-9012-3456'}}}, 'TransactionResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'isFraudulent': {'type': 'boolean', 'example': False}, 'alertId': {'type': 'string', 'example': 'alert_12345'}}}, 'Alert': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'alert_12345'}, 'transactionId': {'type': 'string', 'example': 'trans_67890'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'message': {'type': 'string', 'example': '이상 거래가 탐지되었습니다.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 5}, 'totalItems': {'type': 'integer', 'example': 50}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
37,"{'openapi': '3.0.0', 'info': {'title': 'Consumer Opinion Analysis API', 'version': '1.0.0', 'description': '익명 커뮤니티 기반의 소비자 의견 데이터를 수집·분석하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/opinions': {'get': {'summary': '소비자 의견 목록 조회', 'description': '등록된 모든 소비자 의견 목록을 조회합니다', 'tags': ['Opinions'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '소비자 의견 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Opinion'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '소비자 의견 등록', 'description': '새로운 소비자 의견을 등록합니다', 'tags': ['Opinions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateOpinionRequest'}}}}, 'responses': {'201': {'description': '소비자 의견 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Opinion'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/opinions/{opinionId}': {'get': {'summary': '특정 소비자 의견 조회', 'description': '소비자 의견 ID로 특정 소비자 의견 정보를 조회합니다', 'tags': ['Opinions'], 'parameters': [{'name': 'opinionId', 'in': 'path', 'required': True, 'description': '소비자 의견 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '소비자 의견 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Opinion'}}}}}}, '404': {'description': '소비자 의견을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '소비자 의견 수정', 'description': '소비자 의견을 수정합니다', 'tags': ['Opinions'], 'parameters': [{'name': 'opinionId', 'in': 'path', 'required': True, 'description': '소비자 의견 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateOpinionRequest'}}}}, 'responses': {'200': {'description': '소비자 의견 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Opinion'}}}}}}, '404': {'description': '소비자 의견을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '소비자 의견 삭제', 'description': '소비자 의견을 삭제합니다', 'tags': ['Opinions'], 'parameters': [{'name': 'opinionId', 'in': 'path', 'required': True, 'description': '소비자 의견 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '소비자 의견 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '소비자 의견이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '소비자 의견을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/opinions/analysis': {'post': {'summary': '소비자 의견 분석', 'description': '소비자 의견에 대한 키워드 및 감성 분석을 수행합니다', 'tags': ['Analysis'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AnalysisRequest'}}}}, 'responses': {'200': {'description': '소비자 의견 분석 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AnalysisResult'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Opinion': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'content': {'type': 'string', 'example': '이 제품은 정말 좋습니다!'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateOpinionRequest': {'type': 'object', 'required': ['content'], 'properties': {'content': {'type': 'string', 'minLength': 1, 'maxLength': 500, 'example': '이 제품은 정말 좋습니다!'}}}, 'UpdateOpinionRequest': {'type': 'object', 'properties': {'content': {'type': 'string', 'minLength': 1, 'maxLength': 500, 'example': '이 제품은 정말 훌륭합니다!'}}}, 'AnalysisRequest': {'type': 'object', 'required': ['opinionIds'], 'properties': {'opinionIds': {'type': 'array', 'items': {'type': 'integer'}, 'example': [1, 2, 3]}}}, 'AnalysisResult': {'type': 'object', 'properties': {'keywords': {'type': 'array', 'items': {'type': 'string'}, 'example': ['좋음', '가격', '품질']}, 'sentiment': {'type': 'string', 'example': '긍정적'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
38,"{'openapi': '3.0.0', 'info': {'title': 'Handwriting Font Generation API', 'version': '1.0.0', 'description': '사용자의 필체를 학습하여 손글씨 폰트를 생성하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/fonts': {'post': {'summary': '손글씨 폰트 생성 요청', 'description': '사용자의 필체 데이터를 기반으로 손글씨 폰트를 생성합니다.', 'tags': ['Fonts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateFontRequest'}}}}, 'responses': {'201': {'description': '폰트 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Font'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/fonts/{fontId}': {'get': {'summary': '특정 폰트 조회', 'description': '생성된 폰트의 정보를 조회합니다.', 'tags': ['Fonts'], 'parameters': [{'name': 'fontId', 'in': 'path', 'required': True, 'description': '폰트 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '폰트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Font'}}}}}}, '404': {'description': '폰트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/fonts/{fontId}/apply': {'post': {'summary': '폰트 스타일 적용', 'description': '특정 텍스트에 생성된 폰트 스타일을 적용합니다.', 'tags': ['Fonts'], 'parameters': [{'name': 'fontId', 'in': 'path', 'required': True, 'description': '폰트 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ApplyFontRequest'}}}}, 'responses': {'200': {'description': '폰트 스타일 적용 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'string', 'example': 'Styled text output'}}}}}}, '404': {'description': '폰트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'CreateFontRequest': {'type': 'object', 'required': ['handwritingData'], 'properties': {'handwritingData': {'type': 'string', 'description': '사용자의 필체 데이터 (Base64 인코딩된 이미지)'}}}, 'Font': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'font_12345'}, 'name': {'type': 'string', 'example': 'Custom Handwriting Font'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'ApplyFontRequest': {'type': 'object', 'required': ['text'], 'properties': {'text': {'type': 'string', 'description': '적용할 텍스트'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
39,"{'openapi': '3.0.0', 'info': {'title': 'Real-time Traffic Analysis API', 'version': '1.0.0', 'description': '실시간 교통량 분석 시스템을 위한 API'}, 'servers': [{'url': 'https://api.trafficanalysis.com/v1', 'description': 'Production server'}], 'paths': {'/traffic-data': {'get': {'summary': '실시간 교통 데이터 조회', 'description': '현재 교통량 데이터를 조회합니다.', 'tags': ['Traffic'], 'parameters': [{'name': 'location', 'in': 'query', 'description': '조회할 지역의 위치 정보', 'required': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '교통 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'location': {'type': 'string', 'example': 'Seoul'}, 'vehicleCount': {'type': 'integer', 'example': 150}, 'congestionLevel': {'type': 'string', 'example': 'moderate'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}}}}}}, '404': {'description': '데이터를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/traffic-simulation': {'post': {'summary': '신호 시뮬레이션 실행', 'description': '도로별 우선 신호 시뮬레이션을 실행합니다.', 'tags': ['Traffic'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TrafficSimulationRequest'}}}}, 'responses': {'200': {'description': '시뮬레이션 실행 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'simulationResult': {'type': 'object', 'properties': {'improvedCongestionLevel': {'type': 'string', 'example': 'low'}, 'estimatedTimeSaved': {'type': 'integer', 'example': 5}}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/traffic-analysis': {'get': {'summary': '혼잡도 분석 결과 조회', 'description': '혼잡도 분석 결과를 조회합니다.', 'tags': ['Traffic'], 'parameters': [{'name': 'location', 'in': 'query', 'description': '혼잡도 분석할 지역', 'required': True, 'schema': {'type': 'string'}}, {'name': 'timeFrame', 'in': 'query', 'description': ""분석할 시간 범위 (예: 'last_hour', 'last_day')"", 'required': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '혼잡도 분석 결과 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'congestionLevel': {'type': 'string', 'example': 'high'}, 'vehicleCount': {'type': 'integer', 'example': 200}}}}}}}}}, '404': {'description': '분석 결과를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'TrafficSimulationRequest': {'type': 'object', 'required': ['location', 'signalPriority'], 'properties': {'location': {'type': 'string', 'example': 'Seoul'}, 'signalPriority': {'type': 'array', 'items': {'type': 'object', 'properties': {'road': {'type': 'string', 'example': 'Main St'}, 'priority': {'type': 'integer', 'example': 1}}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
40,"{'openapi': '3.0.0', 'info': {'title': 'Social Issue Analysis API', 'version': '1.0.0', 'description': '뉴스 기사 및 커뮤니티 데이터를 크롤링하여 사회적 이슈와 소비자 반응을 분석하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/articles': {'get': {'summary': '뉴스 기사 목록 조회', 'description': '크롤링된 뉴스 기사 목록을 조회합니다', 'tags': ['Articles'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '뉴스 기사 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Article'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/articles/{articleId}/sentiment': {'get': {'summary': '기사 감성 점수 조회', 'description': '특정 기사에 대한 감성 점수를 조회합니다', 'tags': ['Sentiment'], 'parameters': [{'name': 'articleId', 'in': 'path', 'required': True, 'description': '기사 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '감성 점수 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SentimentScore'}}}}}}, '404': {'description': '기사를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/trends': {'get': {'summary': '트렌드 변화 추이 조회', 'description': '사회적 이슈의 트렌드 변화 추이를 조회합니다', 'tags': ['Trends'], 'responses': {'200': {'description': '트렌드 변화 추이 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Trend'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/feedback': {'post': {'summary': 'PR 및 마케팅 전략 피드백 제공', 'description': '기업의 PR 및 마케팅 전략에 대한 피드백을 제공합니다', 'tags': ['Feedback'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/FeedbackRequest'}}}}, 'responses': {'201': {'description': '피드백 제공 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '피드백이 성공적으로 제공되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Article': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '사회적 이슈에 대한 새로운 연구 결과'}, 'content': {'type': 'string', 'example': '최근 연구에 따르면...'}, 'publishedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'SentimentScore': {'type': 'object', 'properties': {'score': {'type': 'number', 'format': 'float', 'example': 0.75}, 'keywords': {'type': 'array', 'items': {'type': 'string'}}}}, 'Trend': {'type': 'object', 'properties': {'issue': {'type': 'string', 'example': '환경 보호'}, 'trendScore': {'type': 'number', 'format': 'float', 'example': 0.85}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'FeedbackRequest': {'type': 'object', 'required': ['strategy', 'feedback'], 'properties': {'strategy': {'type': 'string', 'example': '소셜 미디어 캠페인'}, 'feedback': {'type': 'string', 'example': '소셜 미디어 캠페인을 강화할 필요가 있습니다.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
41,"{'openapi': '3.0.0', 'info': {'title': 'Customer Churn Prediction API', 'version': '1.0.0', 'description': '금융 소비자의 이탈률을 예측하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/churn/predict': {'post': {'summary': '이탈 예측', 'description': '사용자의 이탈 가능성을 예측합니다.', 'tags': ['Churn Prediction'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ChurnPredictionRequest'}}}}, 'responses': {'200': {'description': '이탈 예측 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ChurnPredictionResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/churn/factors': {'get': {'summary': '주요 이탈 요인 조회', 'description': '이탈에 영향을 미치는 주요 요인을 조회합니다.', 'tags': ['Churn Factors'], 'responses': {'200': {'description': '주요 이탈 요인 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ChurnFactorsResponse'}}}}, '404': {'description': '이탈 요인을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/churn/strategies': {'post': {'summary': '유지 전략 생성', 'description': '이탈 가능성이 높은 고객을 위한 맞춤형 유지 전략을 생성합니다.', 'tags': ['Retention Strategies'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/RetentionStrategyRequest'}}}}, 'responses': {'201': {'description': '유지 전략 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/RetentionStrategyResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'ChurnPredictionRequest': {'type': 'object', 'required': ['userId', 'transactionHistory', 'activityLog'], 'properties': {'userId': {'type': 'string', 'example': 'user123'}, 'transactionHistory': {'type': 'array', 'items': {'type': 'object', 'properties': {'transactionId': {'type': 'string', 'example': 'txn456'}, 'amount': {'type': 'number', 'example': 150.75}, 'date': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}}, 'activityLog': {'type': 'array', 'items': {'type': 'object', 'properties': {'activityType': {'type': 'string', 'example': 'login'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}}}}, 'ChurnPredictionResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'churnProbability': {'type': 'number', 'example': 0.85}, 'predictedClass': {'type': 'string', 'example': 'high'}}}}}, 'ChurnFactorsResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'factor': {'type': 'string', 'example': 'low engagement'}, 'impact': {'type': 'number', 'example': 0.7}}}}}}, 'RetentionStrategyRequest': {'type': 'object', 'required': ['userId', 'churnProbability'], 'properties': {'userId': {'type': 'string', 'example': 'user123'}, 'churnProbability': {'type': 'number', 'example': 0.85}}}, 'RetentionStrategyResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'strategy': {'type': 'string', 'example': 'Offer a discount on next transaction'}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
42,"{'openapi': '3.0.0', 'info': {'title': 'Agricultural Yield Prediction API', 'version': '1.0.0', 'description': '기상 데이터를 활용하여 농업 생산량을 예측하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/predictions': {'post': {'summary': '농업 생산량 예측', 'description': '기상 데이터를 기반으로 작물별 수확량을 예측합니다.', 'tags': ['Predictions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictYieldRequest'}}}}, 'responses': {'200': {'description': '예측 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/PredictYieldResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/predictions/{cropId}/schedule': {'get': {'summary': '농업 스케줄 자동화', 'description': '예측 오차를 기반으로 농업 스케줄을 자동으로 생성합니다.', 'tags': ['Schedule'], 'parameters': [{'name': 'cropId', 'in': 'path', 'required': True, 'description': '작물 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '스케줄 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ScheduleResponse'}}}}, '404': {'description': '작물을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'PredictYieldRequest': {'type': 'object', 'required': ['temperature', 'precipitation', 'sunlight', 'cropType'], 'properties': {'temperature': {'type': 'number', 'example': 25.5}, 'precipitation': {'type': 'number', 'example': 120.0}, 'sunlight': {'type': 'number', 'example': 10.0}, 'cropType': {'type': 'string', 'example': 'wheat'}}}, 'PredictYieldResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'predictedYield': {'type': 'number', 'example': 3000.0}, 'errorMargin': {'type': 'number', 'example': 150.0}}}, 'ScheduleResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'schedule': {'type': 'array', 'items': {'type': 'object', 'properties': {'task': {'type': 'string', 'example': 'Irrigation'}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-05-01'}}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
43,"{'openapi': '3.0.0', 'info': {'title': 'Cultural Heritage Damage Detection API', 'version': '1.0.0', 'description': '비정형 이미지 데이터를 활용한 문화재 훼손 자동 탐지 시스템'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/images/upload': {'post': {'summary': '이미지 업로드', 'description': 'CCTV 영상 또는 SNS 이미지를 업로드하여 훼손 탐지를 요청합니다.', 'tags': ['Images'], 'requestBody': {'required': True, 'content': {'multipart/form-data': {'schema': {'type': 'object', 'properties': {'image': {'type': 'string', 'format': 'binary'}}}}}, 'responses': {'200': {'description': '이미지 업로드 및 처리 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'damageDetected': {'type': 'boolean', 'example': True}, 'damageAreas': {'type': 'array', 'items': {'type': 'object', 'properties': {'x': {'type': 'integer', 'example': 100}, 'y': {'type': 'integer', 'example': 150}, 'width': {'type': 'integer', 'example': 50}, 'height': {'type': 'integer', 'example': 75}}}}, 'intrusionDetected': {'type': 'boolean', 'example': False}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/images/{imageId}/results': {'get': {'summary': '이미지 처리 결과 조회', 'description': '업로드한 이미지의 처리 결과를 조회합니다.', 'tags': ['Images'], 'parameters': [{'name': 'imageId', 'in': 'path', 'required': True, 'description': '이미지 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '이미지 처리 결과 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'damageDetected': {'type': 'boolean', 'example': True}, 'damageAreas': {'type': 'array', 'items': {'type': 'object', 'properties': {'x': {'type': 'integer', 'example': 100}, 'y': {'type': 'integer', 'example': 150}, 'width': {'type': 'integer', 'example': 50}, 'height': {'type': 'integer', 'example': 75}}}}, 'intrusionDetected': {'type': 'boolean', 'example': False}}}}}}}, '404': {'description': '이미지를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
44,"{'openapi': '3.0.0', 'info': {'title': 'Accounting Risk Detection API', 'version': '1.0.0', 'description': '중소기업 회계 데이터를 기반으로 이상 거래 탐지 및 회계 위험 분석을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/transactions': {'get': {'summary': '거래 목록 조회', 'description': '모든 거래 목록을 조회합니다.', 'tags': ['Transactions'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '거래 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Transaction'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/transactions/detect': {'post': {'summary': '이상 거래 탐지', 'description': '비정상적인 거래 패턴을 탐지합니다.', 'tags': ['Transactions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/DetectTransactionRequest'}}}}, 'responses': {'200': {'description': '이상 거래 탐지 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'alerts': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'get': {'summary': '경고 목록 조회', 'description': '발생한 경고 목록을 조회합니다.', 'tags': ['Alerts'], 'responses': {'200': {'description': '경고 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '404': {'description': '경고를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Transaction': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'accountFrom': {'type': 'string', 'example': 'Account A'}, 'accountTo': {'type': 'string', 'example': 'Account B'}, 'amount': {'type': 'number', 'format': 'float', 'example': 1000.0}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'DetectTransactionRequest': {'type': 'object', 'properties': {'transactions': {'type': 'array', 'items': {'$ref': '#/components/schemas/Transaction'}}}}, 'Alert': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'transactionId': {'type': 'integer', 'example': 1}, 'message': {'type': 'string', 'example': '이상 거래 탐지됨'}, 'severity': {'type': 'string', 'enum': ['low', 'medium', 'high'], 'example': 'high'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
45,"{'openapi': '3.0.0', 'info': {'title': 'Warehouse Inventory Optimization API', 'version': '1.0.0', 'description': '유통 물류 데이터를 활용하여 창고 내 재고 배치를 최적화하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/inventory': {'get': {'summary': '재고 목록 조회', 'description': '현재 창고 내 재고 목록을 조회합니다', 'tags': ['Inventory'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '재고 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/InventoryItem'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '재고 추가', 'description': '새로운 재고 항목을 추가합니다', 'tags': ['Inventory'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateInventoryItemRequest'}}}}, 'responses': {'201': {'description': '재고 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/InventoryItem'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/inventory/{itemId}': {'get': {'summary': '특정 재고 조회', 'description': '재고 ID로 특정 재고 정보를 조회합니다', 'tags': ['Inventory'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '재고 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '재고 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/InventoryItem'}}}}}}, '404': {'description': '재고를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '재고 정보 수정', 'description': '재고 정보를 수정합니다', 'tags': ['Inventory'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '재고 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateInventoryItemRequest'}}}}, 'responses': {'200': {'description': '재고 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/InventoryItem'}}}}}}, '404': {'description': '재고를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '재고 삭제', 'description': '재고를 삭제합니다', 'tags': ['Inventory'], 'parameters': [{'name': 'itemId', 'in': 'path', 'required': True, 'description': '재고 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '재고 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '재고가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '재고를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/optimization/simulate': {'post': {'summary': '동선 최적화 시뮬레이션', 'description': '입출고 데이터와 이동 거리 데이터를 기반으로 동선 최적화를 시뮬레이션합니다', 'tags': ['Optimization'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/OptimizationRequest'}}}}, 'responses': {'200': {'description': '동선 최적화 시뮬레이션 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'optimizedPath': {'type': 'array', 'items': {'type': 'string'}}, 'timeSaved': {'type': 'number', 'example': 15.5}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'InventoryItem': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '상품 A'}, 'quantity': {'type': 'integer', 'example': 100}, 'location': {'type': 'string', 'example': 'A1'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateInventoryItemRequest': {'type': 'object', 'required': ['name', 'quantity', 'location'], 'properties': {'name': {'type': 'string', 'example': '상품 A'}, 'quantity': {'type': 'integer', 'example': 100}, 'location': {'type': 'string', 'example': 'A1'}}}, 'UpdateInventoryItemRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'example': '상품 A 수정'}, 'quantity': {'type': 'integer', 'example': 150}, 'location': {'type': 'string', 'example': 'B2'}}}, 'OptimizationRequest': {'type': 'object', 'required': ['inboundData', 'outboundData'], 'properties': {'inboundData': {'type': 'array', 'items': {'type': 'object', 'properties': {'itemId': {'type': 'integer'}, 'quantity': {'type': 'integer'}}}}, 'outboundData': {'type': 'array', 'items': {'type': 'object', 'properties': {'itemId': {'type': 'integer'}, 'quantity': {'type': 'integer'}}}}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
46,"{'openapi': '3.0.0', 'info': {'title': 'Recommendation System API', 'version': '1.0.0', 'description': '사용자 행동 데이터를 기반으로 한 맞춤형 추천 시스템 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/recommendations': {'get': {'summary': '사용자 맞춤형 추천 조회', 'description': '사용자의 행동 데이터를 기반으로 맞춤형 추천을 조회합니다.', 'tags': ['Recommendations'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}, {'name': 'limit', 'in': 'query', 'description': '추천 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 5}}], 'responses': {'200': {'description': '추천 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Recommendation'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/user/actions': {'post': {'summary': '사용자 행동 데이터 기록', 'description': '사용자의 클릭 로그, 장바구니 이력 등을 기록합니다.', 'tags': ['User Actions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UserAction'}}}}, 'responses': {'201': {'description': '사용자 행동 데이터 기록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '사용자 행동 데이터가 성공적으로 기록되었습니다.'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Recommendation': {'type': 'object', 'properties': {'productId': {'type': 'integer', 'example': 101}, 'productName': {'type': 'string', 'example': '스마트폰'}, 'category': {'type': 'string', 'example': '전자제품'}, 'recommendationScore': {'type': 'number', 'format': 'float', 'example': 0.85}}}, 'UserAction': {'type': 'object', 'required': ['userId', 'actionType', 'productId'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'actionType': {'type': 'string', 'enum': ['click', 'add_to_cart', 'purchase'], 'example': 'click'}, 'productId': {'type': 'integer', 'example': 101}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
47,"{'openapi': '3.0.0', 'info': {'title': 'Smart Learning System API', 'version': '1.0.0', 'description': '온라인 교육 플랫폼의 학습자 이탈 예측 및 관리 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/learners': {'get': {'summary': '학습자 목록 조회', 'description': '등록된 모든 학습자 목록을 조회합니다', 'tags': ['Learners'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '학습자 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Learner'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 학습자 등록', 'description': '새로운 학습자를 등록합니다', 'tags': ['Learners'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateLearnerRequest'}}}}, 'responses': {'201': {'description': '학습자 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Learner'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/learners/{learnerId}': {'get': {'summary': '특정 학습자 조회', 'description': '학습자 ID로 특정 학습자 정보를 조회합니다', 'tags': ['Learners'], 'parameters': [{'name': 'learnerId', 'in': 'path', 'required': True, 'description': '학습자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '학습자 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Learner'}}}}}}, '404': {'description': '학습자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '학습자 정보 수정', 'description': '학습자 정보를 수정합니다', 'tags': ['Learners'], 'parameters': [{'name': 'learnerId', 'in': 'path', 'required': True, 'description': '학습자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateLearnerRequest'}}}}, 'responses': {'200': {'description': '학습자 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Learner'}}}}}}, '404': {'description': '학습자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '학습자 삭제', 'description': '학습자를 삭제합니다', 'tags': ['Learners'], 'parameters': [{'name': 'learnerId', 'in': 'path', 'required': True, 'description': '학습자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '학습자 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '학습자가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '학습자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/learners/{learnerId}/analytics': {'get': {'summary': '학습자 분석 데이터 조회', 'description': '특정 학습자의 분석 데이터를 조회합니다', 'tags': ['Analytics'], 'parameters': [{'name': 'learnerId', 'in': 'path', 'required': True, 'description': '학습자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '분석 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AnalyticsData'}}}}}}, '404': {'description': '학습자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/learners/{learnerId}/notifications': {'post': {'summary': '학습자에게 알림 전송', 'description': '특정 학습자에게 알림을 전송합니다', 'tags': ['Notifications'], 'parameters': [{'name': 'learnerId', 'in': 'path', 'required': True, 'description': '학습자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/NotificationRequest'}}}}, 'responses': {'200': {'description': '알림 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '알림이 성공적으로 전송되었습니다'}}}}}}, '404': {'description': '학습자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Learner': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'Jane Doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'jane@example.com'}, 'enrollmentDate': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateLearnerRequest': {'type': 'object', 'required': ['name', 'email'], 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'Jane Doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'jane@example.com'}}}, 'UpdateLearnerRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'Jane Doe Updated'}, 'email': {'type': 'string', 'format': 'email', 'example': 'jane_updated@example.com'}}}, 'AnalyticsData': {'type': 'object', 'properties': {'studyTime': {'type': 'number', 'example': 120.5}, 'quizScore': {'type': 'number', 'example': 85.5}, 'progressRate': {'type': 'number', 'example': 75.0}, 'dropoutRisk': {'type': 'string', 'example': 'high'}}}, 'NotificationRequest': {'type': 'object', 'required': ['message'], 'properties': {'message': {'type': 'string', 'example': '학습 진행에 도움이 되는 자료를 확인하세요.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
48,"{'openapi': '3.0.0', 'info': {'title': 'Intelligent Air Quality Management API', 'version': '1.0.0', 'description': '건물 내부 공기질을 실시간으로 측정하고 관리하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/spaces': {'get': {'summary': '공간 목록 조회', 'description': '등록된 모든 공간의 목록을 조회합니다', 'tags': ['Spaces'], 'responses': {'200': {'description': '공간 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Space'}}}}}}}}}, 'post': {'summary': '새 공간 생성', 'description': '새로운 공간을 생성합니다', 'tags': ['Spaces'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateSpaceRequest'}}}}, 'responses': {'201': {'description': '공간 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Space'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/spaces/{spaceId}': {'get': {'summary': '특정 공간 조회', 'description': '공간 ID로 특정 공간의 공기질 정보를 조회합니다', 'tags': ['Spaces'], 'parameters': [{'name': 'spaceId', 'in': 'path', 'required': True, 'description': '공간 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '공간 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Space'}}}}}}, '404': {'description': '공간을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '공간 정보 수정', 'description': '공간 정보를 수정합니다', 'tags': ['Spaces'], 'parameters': [{'name': 'spaceId', 'in': 'path', 'required': True, 'description': '공간 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateSpaceRequest'}}}}, 'responses': {'200': {'description': '공간 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Space'}}}}}}, '404': {'description': '공간을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '공간 삭제', 'description': '공간을 삭제합니다', 'tags': ['Spaces'], 'parameters': [{'name': 'spaceId', 'in': 'path', 'required': True, 'description': '공간 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '공간 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '공간이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '공간을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/spaces/{spaceId}/air-quality': {'get': {'summary': '공간의 공기질 데이터 조회', 'description': '특정 공간의 실시간 공기질 데이터를 조회합니다', 'tags': ['Air Quality'], 'parameters': [{'name': 'spaceId', 'in': 'path', 'required': True, 'description': '공간 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '공기질 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AirQuality'}}}}}}, '404': {'description': '공간을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/spaces/{spaceId}/ventilation': {'post': {'summary': '환기 시스템 제어', 'description': '특정 공간의 환기 시스템을 제어합니다', 'tags': ['Ventilation'], 'parameters': [{'name': 'spaceId', 'in': 'path', 'required': True, 'description': '공간 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/VentilationRequest'}}}}, 'responses': {'200': {'description': '환기 시스템 제어 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '환기 시스템이 성공적으로 제어되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Space': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'room_101'}, 'name': {'type': 'string', 'example': '어린이집 1호실'}, 'location': {'type': 'string', 'example': '1층'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateSpaceRequest': {'type': 'object', 'required': ['name', 'location'], 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '어린이집 1호실'}, 'location': {'type': 'string', 'example': '1층'}}}, 'UpdateSpaceRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '어린이집 2호실'}, 'location': {'type': 'string', 'example': '2층'}}}, 'AirQuality': {'type': 'object', 'properties': {'pm2_5': {'type': 'number', 'example': 35.5}, 'co2': {'type': 'number', 'example': 800}, 'temperature': {'type': 'number', 'example': 22.5}, 'humidity': {'type': 'number', 'example': 45}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'VentilationRequest': {'type': 'object', 'required': ['action'], 'properties': {'action': {'type': 'string', 'enum': ['open', 'close'], 'example': 'open'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
49,"{'openapi': '3.0.0', 'info': {'title': 'Gesture-Based Money Transfer API', 'version': '1.0.0', 'description': '손 동작 기반 송금 실행 시스템을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/transactions/send': {'post': {'summary': '송금 실행', 'description': '특정 손 모양 인식 시 송금을 실행합니다.', 'tags': ['Transactions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SendMoneyRequest'}}}}, 'responses': {'200': {'description': '송금 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TransactionResponse'}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/transactions/balance': {'get': {'summary': '잔액 조회', 'description': '특정 손 모양 인식 시 잔액을 조회합니다.', 'tags': ['Transactions'], 'responses': {'200': {'description': '잔액 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BalanceResponse'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/transactions/withdraw': {'post': {'summary': '출금 실행', 'description': '특정 손 모양 인식 시 출금을 실행합니다.', 'tags': ['Transactions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/WithdrawRequest'}}}}, 'responses': {'200': {'description': '출금 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TransactionResponse'}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'SendMoneyRequest': {'type': 'object', 'required': ['amount', 'recipientId'], 'properties': {'amount': {'type': 'number', 'format': 'float', 'example': 100.5}, 'recipientId': {'type': 'string', 'example': 'user123'}}}, 'WithdrawRequest': {'type': 'object', 'required': ['amount'], 'properties': {'amount': {'type': 'number', 'format': 'float', 'example': 50.0}}}, 'TransactionResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'transactionId': {'type': 'string', 'example': 'txn_456'}, 'message': {'type': 'string', 'example': '송금이 성공적으로 완료되었습니다.'}}}, 'BalanceResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'balance': {'type': 'number', 'format': 'float', 'example': 1500.75}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
50,"{'openapi': '3.0.0', 'info': {'title': 'Air Quality Monitoring API', 'version': '1.0.0', 'description': '실시간 대기질 예측 및 경고 시스템을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/sensors': {'get': {'summary': '환경 센서 목록 조회', 'description': '등록된 모든 환경 센서의 목록을 조회합니다.', 'tags': ['Sensors'], 'responses': {'200': {'description': '환경 센서 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Sensor'}}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 환경 센서 등록', 'description': '새로운 환경 센서를 등록합니다.', 'tags': ['Sensors'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateSensorRequest'}}}}, 'responses': {'201': {'description': '환경 센서 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Sensor'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/sensors/{sensorId}/data': {'get': {'summary': '특정 센서 데이터 조회', 'description': '특정 환경 센서의 데이터를 조회합니다.', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '환경 센서 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '센서 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/SensorData'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/air-quality/predictions': {'get': {'summary': '대기질 예측 조회', 'description': '대기질 예측 결과를 조회합니다.', 'tags': ['Air Quality'], 'responses': {'200': {'description': '대기질 예측 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AirQualityPrediction'}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'get': {'summary': '대기질 경고 조회', 'description': '시민에게 발송된 대기질 경고 목록을 조회합니다.', 'tags': ['Alerts'], 'responses': {'200': {'description': '대기질 경고 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '404': {'description': '경고를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Sensor': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'location': {'type': 'string', 'example': 'Seoul, Gangnam'}, 'type': {'type': 'string', 'example': 'PM2.5'}, 'status': {'type': 'string', 'example': 'active'}}}, 'CreateSensorRequest': {'type': 'object', 'required': ['location', 'type'], 'properties': {'location': {'type': 'string', 'example': 'Seoul, Gangnam'}, 'type': {'type': 'string', 'example': 'PM2.5'}}}, 'SensorData': {'type': 'object', 'properties': {'temperature': {'type': 'number', 'example': 22.5}, 'humidity': {'type': 'number', 'example': 60}, 'pm10': {'type': 'number', 'example': 35}, 'pm2_5': {'type': 'number', 'example': 15}, 'no2': {'type': 'number', 'example': 20}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'AirQualityPrediction': {'type': 'object', 'properties': {'pm10': {'type': 'number', 'example': 40}, 'pm2_5': {'type': 'number', 'example': 20}, 'no2': {'type': 'number', 'example': 25}, 'riskLevel': {'type': 'string', 'example': 'moderate'}, 'predictedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Alert': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'message': {'type': 'string', 'example': '대기질이 나쁩니다. 외출을 자제하세요.'}, 'level': {'type': 'string', 'example': 'high'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
51,"{'openapi': '3.0.0', 'info': {'title': 'Smart Fire Detection System API', 'version': '1.0.0', 'description': '화재 사고 예방 및 신속 대응을 위한 스마트 화재 감지 시스템 API'}, 'servers': [{'url': 'https://api.smartfire.com/v1', 'description': 'Production server'}], 'paths': {'/sensors': {'get': {'summary': '센서 목록 조회', 'description': '등록된 모든 센서 목록을 조회합니다', 'tags': ['Sensors'], 'responses': {'200': {'description': '센서 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Sensor'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 센서 등록', 'description': '새로운 센서를 등록합니다', 'tags': ['Sensors'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateSensorRequest'}}}}, 'responses': {'201': {'description': '센서 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Sensor'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/sensors/{sensorId}/data': {'post': {'summary': '센서 데이터 전송', 'description': '센서에서 수집한 데이터를 전송합니다', 'tags': ['Sensors'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '센서 ID', 'schema': {'type': 'string'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SensorData'}}}}, 'responses': {'200': {'description': '데이터 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '데이터가 성공적으로 수신되었습니다'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'get': {'summary': '경고 알림 목록 조회', 'description': '발생한 경고 알림 목록을 조회합니다', 'tags': ['Alerts'], 'responses': {'200': {'description': '경고 알림 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Sensor': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'sensor_001'}, 'location': {'type': 'string', 'example': '1층 복도'}, 'type': {'type': 'string', 'example': '연기 감지기'}, 'status': {'type': 'string', 'example': 'active'}}}, 'CreateSensorRequest': {'type': 'object', 'required': ['location', 'type'], 'properties': {'location': {'type': 'string', 'example': '1층 복도'}, 'type': {'type': 'string', 'example': '연기 감지기'}}}, 'SensorData': {'type': 'object', 'required': ['smokeLevel', 'temperature', 'coLevel'], 'properties': {'smokeLevel': {'type': 'number', 'example': 0.5}, 'temperature': {'type': 'number', 'example': 75}, 'coLevel': {'type': 'number', 'example': 0.02}}}, 'Alert': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'alert_001'}, 'sensorId': {'type': 'string', 'example': 'sensor_001'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'message': {'type': 'string', 'example': '화재 징후 감지됨'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
52,"{'openapi': '3.0.0', 'info': {'title': 'Medication Management API', 'version': '1.0.0', 'description': '고령자를 위한 약 복용 관리 시스템 API'}, 'servers': [{'url': 'https://api.medicationmanagement.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/User'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/medications': {'post': {'summary': '약 복용 일정 등록', 'description': '사용자의 약 복용 일정을 등록합니다', 'tags': ['Medications'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateMedicationScheduleRequest'}}}}, 'responses': {'201': {'description': '약 복용 일정 등록 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MedicationSchedule'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/medications/{medicationId}/take': {'post': {'summary': '약 복용 확인', 'description': '사용자가 약을 복용했음을 확인합니다', 'tags': ['Medications'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}, {'name': 'medicationId', 'in': 'path', 'required': True, 'description': '약 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '약 복용 확인 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '약 복용이 확인되었습니다'}}}}}}, '404': {'description': '사용자 또는 약을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/medications/{medicationId}/reminder': {'post': {'summary': '복용 알림 전송', 'description': '사용자에게 복용 알림을 전송합니다', 'tags': ['Medications'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}, {'name': 'medicationId', 'in': 'path', 'required': True, 'description': '약 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '복용 알림 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '복용 알림이 전송되었습니다'}}}}}}, '404': {'description': '사용자 또는 약을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/medications/report': {'get': {'summary': '복용 리포트 조회', 'description': '사용자의 주 단위 복용 리포트를 조회합니다', 'tags': ['Reports'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '복용 리포트 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/MedicationReport'}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '홍길동'}, 'age': {'type': 'integer', 'example': 75}, 'guardianContact': {'type': 'string', 'example': '010-1234-5678'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['name', 'age', 'guardianContact'], 'properties': {'name': {'type': 'string', 'minLength': 1, 'maxLength': 100, 'example': '홍길동'}, 'age': {'type': 'integer', 'minimum': 0, 'example': 75}, 'guardianContact': {'type': 'string', 'example': '010-1234-5678'}}}, 'CreateMedicationScheduleRequest': {'type': 'object', 'required': ['medicationName', 'dosage', 'schedule'], 'properties': {'medicationName': {'type': 'string', 'example': '고혈압약'}, 'dosage': {'type': 'string', 'example': '1정'}, 'schedule': {'type': 'array', 'items': {'type': 'string', 'format': 'time', 'example': '08:00'}}}}, 'MedicationSchedule': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'medicationName': {'type': 'string', 'example': '고혈압약'}, 'dosage': {'type': 'string', 'example': '1정'}, 'schedule': {'type': 'array', 'items': {'type': 'string', 'format': 'time', 'example': '08:00'}}}}, 'MedicationReport': {'type': 'object', 'properties': {'userId': {'type': 'integer', 'example': 1}, 'weeklyReport': {'type': 'array', 'items': {'type': 'object', 'properties': {'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'medicationsTaken': {'type': 'array', 'items': {'type': 'string', 'example': '고혈압약'}}, 'medicationsMissed': {'type': 'array', 'items': {'type': 'string', 'example': '당뇨약'}}}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
53,"{'openapi': '3.0.0', 'info': {'title': 'Business Location Recommendation API', 'version': '1.0.0', 'description': '소상공인을 위한 최적의 상점 입지 추천 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/locations/recommend': {'post': {'summary': '상점 입지 추천', 'description': '예비 창업자가 입력한 업종과 자본 규모에 따라 최적의 상점 입지를 추천합니다.', 'tags': ['Locations'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LocationRecommendationRequest'}}}}, 'responses': {'200': {'description': '상점 입지 추천 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LocationRecommendationResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/locations/{locationId}/report': {'get': {'summary': '상점 입지 리포트 조회', 'description': '추천된 상점 입지에 대한 상세 리포트를 조회합니다.', 'tags': ['Locations'], 'parameters': [{'name': 'locationId', 'in': 'path', 'required': True, 'description': '추천된 상점 입지 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '리포트 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/LocationReportResponse'}}}}, '404': {'description': '리포트를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'LocationRecommendationRequest': {'type': 'object', 'required': ['businessType', 'capital'], 'properties': {'businessType': {'type': 'string', 'example': '카페'}, 'capital': {'type': 'number', 'example': 50000000}}}, 'LocationRecommendationResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/RecommendedLocation'}}}}, 'RecommendedLocation': {'type': 'object', 'properties': {'locationId': {'type': 'string', 'example': 'location_123'}, 'address': {'type': 'string', 'example': '서울특별시 강남구 테헤란로 123'}, 'expectedRevenue': {'type': 'number', 'example': 30000000}, 'competitionRate': {'type': 'number', 'example': 0.2}, 'inflowPopulation': {'type': 'number', 'example': 1000}}}, 'LocationReportResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'locationId': {'type': 'string', 'example': 'location_123'}, 'report': {'type': 'string', 'example': '상권 분석 리포트 내용'}}}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
54,"{'openapi': '3.0.0', 'info': {'title': 'Fitness Management API', 'version': '1.0.0', 'description': '운동 효과를 극대화하기 위한 개인 맞춤형 운동 루틴 설계 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/biometrics': {'post': {'summary': '생체 데이터 수집', 'description': '사용자의 실시간 심박수, 운동 강도, 체온 등의 생체 데이터를 수집합니다.', 'tags': ['Biometrics'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/BiometricsRequest'}}}}, 'responses': {'201': {'description': '생체 데이터 수집 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '생체 데이터가 성공적으로 수집되었습니다.'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/workouts': {'get': {'summary': '개인 맞춤형 운동 루틴 조회', 'description': '사용자의 체력 수준과 피로도에 기반한 개인 맞춤형 운동 루틴을 조회합니다.', 'tags': ['Workouts'], 'responses': {'200': {'description': '운동 루틴 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/WorkoutRoutine'}}}}, '404': {'description': '운동 루틴을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '운동 루틴 생성', 'description': '사용자의 생체 데이터를 기반으로 새로운 운동 루틴을 생성합니다.', 'tags': ['Workouts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateWorkoutRequest'}}}}, 'responses': {'201': {'description': '운동 루틴 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/WorkoutRoutine'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/health-status': {'get': {'summary': '전체 건강 상태 조회', 'description': '일별 운동량과 수면 상태를 분석하여 전체적인 건강 상태를 조회합니다.', 'tags': ['Health'], 'responses': {'200': {'description': '건강 상태 조회 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HealthStatus'}}}}, '404': {'description': '건강 상태를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'BiometricsRequest': {'type': 'object', 'required': ['heartRate', 'exerciseIntensity', 'bodyTemperature'], 'properties': {'heartRate': {'type': 'integer', 'example': 75}, 'exerciseIntensity': {'type': 'string', 'enum': ['low', 'medium', 'high'], 'example': 'medium'}, 'bodyTemperature': {'type': 'number', 'format': 'float', 'example': 36.5}}}, 'CreateWorkoutRequest': {'type': 'object', 'properties': {'routineName': {'type': 'string', 'example': '체중 감량 루틴'}, 'duration': {'type': 'integer', 'example': 30}, 'exercises': {'type': 'array', 'items': {'type': 'string', 'example': '스쿼트'}}}}, 'WorkoutRoutine': {'type': 'object', 'properties': {'routineId': {'type': 'integer', 'example': 1}, 'routineName': {'type': 'string', 'example': '체중 감량 루틴'}, 'duration': {'type': 'integer', 'example': 30}, 'exercises': {'type': 'array', 'items': {'type': 'string', 'example': '스쿼트'}}}}, 'HealthStatus': {'type': 'object', 'properties': {'dailyExercise': {'type': 'integer', 'example': 60}, 'sleepQuality': {'type': 'string', 'example': '양호'}, 'overallHealth': {'type': 'string', 'example': '좋음'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
55,"{'openapi': '3.0.0', 'info': {'title': 'Flood Detection and Road Control Notification API', 'version': '1.0.0', 'description': '실시간 침수 감지 및 도로 통제 알림 시스템을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/flood-sensors': {'get': {'summary': '침수 센서 목록 조회', 'description': '등록된 모든 침수 센서의 목록을 조회합니다.', 'tags': ['Flood Sensors'], 'responses': {'200': {'description': '침수 센서 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/FloodSensor'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/flood-sensors/{sensorId}/alerts': {'get': {'summary': '특정 센서의 침수 경고 조회', 'description': '특정 센서에서 발생한 침수 경고를 조회합니다.', 'tags': ['Flood Alerts'], 'parameters': [{'name': 'sensorId', 'in': 'path', 'required': True, 'description': '침수 센서 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '침수 경고 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/FloodAlert'}}}}}}, '404': {'description': '센서를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/road-controls': {'post': {'summary': '도로 통제 정보 생성', 'description': '새로운 도로 통제 정보를 생성합니다.', 'tags': ['Road Controls'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateRoadControlRequest'}}}}, 'responses': {'201': {'description': '도로 통제 정보 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/RoadControl'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/road-controls/{controlId}': {'get': {'summary': '특정 도로 통제 정보 조회', 'description': '도로 통제 ID로 특정 도로 통제 정보를 조회합니다.', 'tags': ['Road Controls'], 'parameters': [{'name': 'controlId', 'in': 'path', 'required': True, 'description': '도로 통제 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '도로 통제 정보 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/RoadControl'}}}}}}, '404': {'description': '도로 통제를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/flood-predictions': {'get': {'summary': '침수 예측 정보 조회', 'description': '향후 침수 가능 지역에 대한 예측 정보를 조회합니다.', 'tags': ['Flood Predictions'], 'responses': {'200': {'description': '침수 예측 정보 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/FloodPrediction'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'FloodSensor': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'sensor_1'}, 'location': {'type': 'string', 'example': 'Main Street near River'}, 'waterLevel': {'type': 'number', 'example': 2.5}, 'status': {'type': 'string', 'example': 'active'}}}, 'FloodAlert': {'type': 'object', 'properties': {'sensorId': {'type': 'string', 'example': 'sensor_1'}, 'alertLevel': {'type': 'string', 'example': 'high'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateRoadControlRequest': {'type': 'object', 'required': ['location', 'reason'], 'properties': {'location': {'type': 'string', 'example': 'Main Street'}, 'reason': {'type': 'string', 'example': 'Flooding'}, 'startTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'endTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T12:30:00Z'}}}, 'RoadControl': {'type': 'object', 'properties': {'id': {'type': 'string', 'example': 'control_1'}, 'location': {'type': 'string', 'example': 'Main Street'}, 'reason': {'type': 'string', 'example': 'Flooding'}, 'startTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'endTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T12:30:00Z'}}}, 'FloodPrediction': {'type': 'object', 'properties': {'location': {'type': 'string', 'example': 'Downtown Area'}, 'predictedLevel': {'type': 'number', 'example': 3.0}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
56,"{'openapi': '3.0.0', 'info': {'title': 'Course Registration and Feedback API', 'version': '1.0.0', 'description': '학생들의 수강신청과 피드백을 위한 API'}, 'servers': [{'url': 'https://api.university.edu/v1', 'description': 'Production server'}], 'paths': {'/timetables': {'post': {'summary': '최적의 시간표 생성', 'description': '학생의 선호 과목과 가능한 시간대를 기반으로 최적의 시간표를 생성합니다.', 'tags': ['Timetable'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TimetableRequest'}}}}, 'responses': {'200': {'description': '시간표 생성 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/TimetableResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/courses/{courseId}/feedback': {'post': {'summary': '과목 피드백 제출', 'description': '학생이 과목에 대한 만족도를 제출합니다.', 'tags': ['Feedback'], 'parameters': [{'name': 'courseId', 'in': 'path', 'required': True, 'description': '과목 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/FeedbackRequest'}}}}, 'responses': {'201': {'description': '피드백 제출 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/FeedbackResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/courses': {'get': {'summary': '과목 목록 조회', 'description': '등록된 모든 과목 목록을 조회합니다.', 'tags': ['Courses'], 'responses': {'200': {'description': '과목 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Course'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'TimetableRequest': {'type': 'object', 'required': ['preferredCourses', 'availableTimes'], 'properties': {'preferredCourses': {'type': 'array', 'items': {'type': 'integer'}, 'example': [101, 102, 103]}, 'availableTimes': {'type': 'array', 'items': {'type': 'string', 'format': 'date-time'}, 'example': ['2024-03-01T09:00:00Z', '2024-03-01T10:00:00Z']}}}, 'TimetableResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'timetable': {'type': 'array', 'items': {'$ref': '#/components/schemas/Class'}}}}, 'Class': {'type': 'object', 'properties': {'courseId': {'type': 'integer', 'example': 101}, 'courseName': {'type': 'string', 'example': 'Introduction to Programming'}, 'professor': {'type': 'string', 'example': 'Dr. Smith'}, 'time': {'type': 'string', 'format': 'date-time', 'example': '2024-03-01T09:00:00Z'}, 'location': {'type': 'string', 'example': 'Room 101'}}}, 'FeedbackRequest': {'type': 'object', 'required': ['satisfaction', 'comments'], 'properties': {'satisfaction': {'type': 'integer', 'minimum': 1, 'maximum': 5, 'example': 4}, 'comments': {'type': 'string', 'example': '교수님이 수업을 잘 진행하셨습니다.'}}}, 'FeedbackResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '피드백이 성공적으로 제출되었습니다.'}}}, 'Course': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 101}, 'name': {'type': 'string', 'example': 'Introduction to Programming'}, 'difficulty': {'type': 'string', 'example': '중간'}, 'professorStyle': {'type': 'string', 'example': '강의 중심'}, 'teamProject': {'type': 'boolean', 'example': True}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
57,"{'openapi': '3.0.0', 'info': {'title': 'Youth Financial Management API', 'version': '1.0.0', 'description': '청년 1인 가구의 소비 패턴 분석 및 재무 목표 달성을 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/expenses': {'get': {'summary': '소비 데이터 조회', 'description': '사용자의 소비 데이터를 항목별로 조회합니다.', 'tags': ['Expenses'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}, {'name': 'month', 'in': 'query', 'required': False, 'description': '조회할 월 (YYYY-MM 형식)', 'schema': {'type': 'string', 'example': '2024-01'}}], 'responses': {'200': {'description': '소비 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Expense'}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'post': {'summary': '비정상적 소비 경고 전송', 'description': '사용자의 재무 목표에 따라 비정상적 소비를 탐지하고 경고 메시지를 전송합니다.', 'tags': ['Alerts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AlertRequest'}}}}, 'responses': {'200': {'description': '경고 메시지 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '경고 메시지가 성공적으로 전송되었습니다.'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/comparisons': {'get': {'summary': '소비 패턴 비교', 'description': '유사한 소비 패턴을 가진 사용자들과 비교하여 상대적인 지출 수준을 제공합니다.', 'tags': ['Comparisons'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '소비 패턴 비교 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'averageSpending': {'type': 'number', 'example': 250000}, 'userSpending': {'type': 'number', 'example': 300000}, 'comparison': {'type': 'string', 'example': '상대적으로 높은 소비 수준입니다.'}}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/savings': {'post': {'summary': '절약 점수 및 전략 제공', 'description': '월말에 절약 점수와 추천 절약 전략을 제공합니다.', 'tags': ['Savings'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/SavingsRequest'}}}}, 'responses': {'200': {'description': '절약 점수 및 전략 제공 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'savingsScore': {'type': 'integer', 'example': 85}, 'strategies': {'type': 'array', 'items': {'type': 'string', 'example': '외식 비용 줄이기'}}}}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Expense': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'category': {'type': 'string', 'example': '식비'}, 'amount': {'type': 'number', 'example': 15000}, 'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}}}, 'AlertRequest': {'type': 'object', 'required': ['userId', 'alertMessage'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'alertMessage': {'type': 'string', 'example': '비정상적 소비가 감지되었습니다.'}}}, 'SavingsRequest': {'type': 'object', 'required': ['userId', 'month'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'month': {'type': 'string', 'example': '2024-01'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
58,"{'openapi': '3.0.0', 'info': {'title': 'Carbon Emission Tracking API', 'version': '1.0.0', 'description': '개인의 소비 활동에서 발생하는 탄소 배출량을 시각화하여 친환경적인 소비를 유도하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/activities': {'get': {'summary': '소비 활동 목록 조회', 'description': '사용자의 소비 활동 목록을 조회합니다.', 'tags': ['Activities'], 'parameters': [{'name': 'userId', 'in': 'query', 'description': '사용자 ID', 'required': True, 'schema': {'type': 'integer'}}, {'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '소비 활동 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Activity'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '소비 활동 추가', 'description': '새로운 소비 활동을 추가합니다.', 'tags': ['Activities'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateActivityRequest'}}}}, 'responses': {'201': {'description': '소비 활동 추가 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Activity'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/activities/{activityId}': {'get': {'summary': '특정 소비 활동 조회', 'description': '소비 활동 ID로 특정 소비 활동 정보를 조회합니다.', 'tags': ['Activities'], 'parameters': [{'name': 'activityId', 'in': 'path', 'required': True, 'description': '소비 활동 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '소비 활동 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Activity'}}}}}}, '404': {'description': '소비 활동을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '소비 활동 수정', 'description': '소비 활동 정보를 수정합니다.', 'tags': ['Activities'], 'parameters': [{'name': 'activityId', 'in': 'path', 'required': True, 'description': '소비 활동 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateActivityRequest'}}}}, 'responses': {'200': {'description': '소비 활동 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Activity'}}}}}}, '404': {'description': '소비 활동을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '소비 활동 삭제', 'description': '소비 활동을 삭제합니다.', 'tags': ['Activities'], 'parameters': [{'name': 'activityId', 'in': 'path', 'required': True, 'description': '소비 활동 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '소비 활동 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '소비 활동이 성공적으로 삭제되었습니다.'}}}}}}, '404': {'description': '소비 활동을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/carbon': {'get': {'summary': '사용자 탄소 배출량 조회', 'description': '사용자의 총 탄소 배출량과 관련 지표를 조회합니다.', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '탄소 배출량 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/CarbonEmission'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Activity': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'type': {'type': 'string', 'example': 'online_shopping'}, 'amount': {'type': 'number', 'example': 100}, 'carbonEmission': {'type': 'number', 'example': 5.0}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateActivityRequest': {'type': 'object', 'required': ['type', 'amount'], 'properties': {'type': {'type': 'string', 'example': 'online_shopping'}, 'amount': {'type': 'number', 'example': 100}}}, 'UpdateActivityRequest': {'type': 'object', 'properties': {'type': {'type': 'string', 'example': 'online_shopping'}, 'amount': {'type': 'number', 'example': 100}}}, 'CarbonEmission': {'type': 'object', 'properties': {'totalEmission': {'type': 'number', 'example': 150.0}, 'treeEquivalent': {'type': 'number', 'example': 10}, 'averageComparison': {'type': 'number', 'example': 75}, 'monthlyTrend': {'type': 'array', 'items': {'type': 'object', 'properties': {'month': {'type': 'string', 'example': '2024-01'}, 'emission': {'type': 'number', 'example': 12.5}}}}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
59,"{'openapi': '3.0.0', 'info': {'title': 'Emotion-Based Content Curation API', 'version': '1.0.0', 'description': '사용자의 감정 상태에 기반하여 맞춤 콘텐츠를 추천하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/emotions': {'post': {'summary': '감정 상태 분석', 'description': '사용자의 감정 상태를 분석하여 추천 콘텐츠를 반환합니다.', 'tags': ['Emotions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'diaryEntry': {'type': 'string', 'example': '오늘은 기분이 좋지 않았다.'}, 'facialExpression': {'type': 'string', 'example': 'sad'}, 'voiceTone': {'type': 'string', 'example': 'low'}}, 'required': ['diaryEntry', 'facialExpression', 'voiceTone']}}}, 'responses': {'200': {'description': '감정 분석 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'emotion': {'type': 'string', 'example': 'sad'}, 'recommendedContent': {'type': 'array', 'items': {'$ref': '#/components/schemas/Content'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/emotions/history': {'get': {'summary': '감정 변화 이력 조회', 'description': '사용자의 감정 변화 이력을 조회합니다.', 'tags': ['Emotions'], 'responses': {'200': {'description': '감정 이력 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'history': {'type': 'array', 'items': {'$ref': '#/components/schemas/EmotionHistory'}}}}}}}, '404': {'description': '이력이 존재하지 않음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Content': {'type': 'object', 'properties': {'title': {'type': 'string', 'example': '치유의 음악'}, 'type': {'type': 'string', 'enum': ['music', 'movie', 'blog'], 'example': 'music'}, 'url': {'type': 'string', 'example': 'https://example.com/healing-music'}}}, 'EmotionHistory': {'type': 'object', 'properties': {'emotion': {'type': 'string', 'example': 'sad'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
60,"{'openapi': '3.0.0', 'info': {'title': 'Digital Usage Analysis API', 'version': '1.0.0', 'description': '청소년의 스마트폰 사용 습관을 분석하고 개선 전략을 제공하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/users/{userId}/usage': {'get': {'summary': '사용자 스마트폰 사용 데이터 조회', 'description': '특정 사용자의 스마트폰 사용 데이터를 조회합니다', 'tags': ['Usage'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '사용자 사용 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/UsageData'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/recommendations': {'get': {'summary': '사용자 맞춤형 개선 전략 추천', 'description': '특정 사용자에게 맞춤형 개선 전략을 추천합니다', 'tags': ['Recommendations'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '추천 전략 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Recommendation'}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/parents/{parentId}/reports': {'get': {'summary': '부모의 자녀 사용 리포트 조회', 'description': '부모가 자녀의 스마트폰 사용 리포트를 조회합니다', 'tags': ['Reports'], 'parameters': [{'name': 'parentId', 'in': 'path', 'required': True, 'description': '부모 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '리포트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Report'}}}}}}, '404': {'description': '부모를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/schools/{schoolId}/usage-trends': {'get': {'summary': '학교 전체 학생군의 디지털 사용 경향 조회', 'description': '특정 학교의 학생들의 디지털 사용 경향을 조회합니다', 'tags': ['Trends'], 'parameters': [{'name': 'schoolId', 'in': 'path', 'required': True, 'description': '학교 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '디지털 사용 경향 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/UsageTrends'}}}}}}, '404': {'description': '학교를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'UsageData': {'type': 'object', 'properties': {'totalScreenTime': {'type': 'integer', 'example': 120}, 'appUsage': {'type': 'array', 'items': {'$ref': '#/components/schemas/AppUsage'}}, 'nightUsageFrequency': {'type': 'integer', 'example': 5}}}, 'AppUsage': {'type': 'object', 'properties': {'appName': {'type': 'string', 'example': 'Instagram'}, 'usageTime': {'type': 'integer', 'example': 60}}}, 'Recommendation': {'type': 'object', 'properties': {'type': {'type': 'string', 'example': 'offline_club'}, 'description': {'type': 'string', 'example': '비슷한 관심사의 오프라인 동아리'}}}, 'Report': {'type': 'object', 'properties': {'userId': {'type': 'integer', 'example': 1}, 'usageSummary': {'type': 'string', 'example': '주간 사용 시간: 15시간'}, 'recommendations': {'type': 'array', 'items': {'$ref': '#/components/schemas/Recommendation'}}}}, 'UsageTrends': {'type': 'object', 'properties': {'averageScreenTime': {'type': 'integer', 'example': 100}, 'mostUsedApps': {'type': 'array', 'items': {'type': 'string', 'example': 'Snapchat'}}, 'nightUsagePercentage': {'type': 'number', 'format': 'float', 'example': 0.25}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'NOT_FOUND'}}}}}}"
61,"{'openapi': '3.0.0', 'info': {'title': 'Community Energy Consumption API', 'version': '1.0.0', 'description': '지역 단위의 전력 소비량 분석 및 에너지 절약 문화 조성을 위한 API'}, 'servers': [{'url': 'https://api.energycommunity.com/v1', 'description': 'Production server'}], 'paths': {'/energy-consumption': {'get': {'summary': '전력 소비 데이터 조회', 'description': '마을 단위의 전력 소비 데이터를 조회합니다.', 'tags': ['Energy Consumption'], 'parameters': [{'name': 'villageId', 'in': 'query', 'description': '마을 ID', 'required': True, 'schema': {'type': 'string'}}, {'name': 'period', 'in': 'query', 'description': ""조회할 기간 (예: '2023-01', '2023-02')"", 'required': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '전력 소비 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'villageId': {'type': 'string', 'example': 'village_123'}, 'averageConsumption': {'type': 'number', 'example': 250.5}, 'comparison': {'type': 'object', 'properties': {'similarVillages': {'type': 'array', 'items': {'type': 'object', 'properties': {'villageId': {'type': 'string', 'example': 'village_456'}, 'averageConsumption': {'type': 'number', 'example': 300.0}}}}}}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/energy-report': {'get': {'summary': '개인 에너지 절약 리포트 조회', 'description': '사용자의 에너지 절약 리포트를 조회합니다.', 'tags': ['Energy Report'], 'parameters': [{'name': 'userId', 'in': 'query', 'description': '사용자 ID', 'required': True, 'schema': {'type': 'string'}}, {'name': 'period', 'in': 'query', 'description': ""조회할 기간 (예: '2023-01', '2023-02')"", 'required': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '리포트 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'userId': {'type': 'string', 'example': 'user_789'}, 'savings': {'type': 'number', 'example': 50.0}, 'villageAverage': {'type': 'number', 'example': 250.5}, 'benefits': {'type': 'array', 'items': {'type': 'string', 'example': '지역 화폐 1000점'}}}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/community-campaigns': {'get': {'summary': '공동 절전 캠페인 조회', 'description': '현재 진행 중인 공동 절전 캠페인을 조회합니다.', 'tags': ['Community Campaigns'], 'responses': {'200': {'description': '캠페인 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'campaignId': {'type': 'string', 'example': 'campaign_001'}, 'title': {'type': 'string', 'example': '여름철 에너지 절약 캠페인'}, 'description': {'type': 'string', 'example': '여름철 에어컨 사용 줄이기 캠페인입니다.'}, 'startDate': {'type': 'string', 'format': 'date', 'example': '2023-06-01'}, 'endDate': {'type': 'string', 'format': 'date', 'example': '2023-08-31'}}}}}}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
62,"{'openapi': '3.0.0', 'info': {'title': 'Real-time Navigation System for Visually Impaired', 'version': '1.0.0', 'description': '시각 장애인을 위한 실시간 길 안내 시스템 API'}, 'servers': [{'url': 'https://api.navigation.example.com/v1', 'description': 'Production server'}], 'paths': {'/navigation/start': {'post': {'summary': '길 안내 시작', 'description': '사용자의 현재 위치에서 길 안내를 시작합니다.', 'tags': ['Navigation'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'userId': {'type': 'string', 'description': '사용자 ID'}, 'destination': {'type': 'string', 'description': '목적지 주소'}}, 'required': ['userId', 'destination']}}}, 'responses': {'200': {'description': '길 안내 시작 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '길 안내가 시작되었습니다.'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/navigation/stop': {'post': {'summary': '길 안내 중지', 'description': '현재 진행 중인 길 안내를 중지합니다.', 'tags': ['Navigation'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'userId': {'type': 'string', 'description': '사용자 ID'}}, 'required': ['userId']}}}, 'responses': {'200': {'description': '길 안내 중지 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '길 안내가 중지되었습니다.'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/navigation/status': {'get': {'summary': '길 안내 상태 조회', 'description': '현재 길 안내의 상태를 조회합니다.', 'tags': ['Navigation'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '길 안내 상태 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'isNavigating': {'type': 'boolean', 'example': True}, 'currentLocation': {'type': 'string', 'example': '현재 위치'}, 'nextInstruction': {'type': 'string', 'example': '100미터 직진 후 좌회전'}}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/navigation/feedback': {'post': {'summary': '사용자 피드백 전송', 'description': '사용자가 길 안내에 대한 피드백을 전송합니다.', 'tags': ['Feedback'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'userId': {'type': 'string', 'description': '사용자 ID'}, 'feedback': {'type': 'string', 'description': '피드백 내용'}}, 'required': ['userId', 'feedback']}}}, 'responses': {'200': {'description': '피드백 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '피드백이 성공적으로 전송되었습니다.'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다.'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
63,"{'openapi': '3.0.0', 'info': {'title': 'Loneliness Prevention API', 'version': '1.0.0', 'description': '1인 가구의 고독사 문제를 예방하기 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/users': {'get': {'summary': '사용자 목록 조회', 'description': '등록된 모든 사용자 목록을 조회합니다', 'tags': ['Users'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '사용자 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/User'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 사용자 생성', 'description': '새로운 사용자를 생성합니다', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}': {'get': {'summary': '특정 사용자 조회', 'description': '사용자 ID로 특정 사용자 정보를 조회합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '사용자 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '사용자 정보 수정', 'description': '사용자 정보를 수정합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateUserRequest'}}}}, 'responses': {'200': {'description': '사용자 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '사용자 삭제', 'description': '사용자를 삭제합니다', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '사용자 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '사용자가 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users/{userId}/activity': {'post': {'summary': '사용자 활동 보고', 'description': '사용자가 활동을 보고합니다', 'tags': ['Activity'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ActivityReportRequest'}}}}, 'responses': {'200': {'description': '활동 보고 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '활동이 성공적으로 보고되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'post': {'summary': '경고 전송', 'description': '활동이 없거나 패턴이 급격히 변할 경우 경고를 전송합니다', 'tags': ['Alerts'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AlertRequest'}}}}, 'responses': {'200': {'description': '경고 전송 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '경고가 성공적으로 전송되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': '홍길동'}, 'email': {'type': 'string', 'format': 'email', 'example': 'hong@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['name', 'email'], 'properties': {'name': {'type': 'string', 'minLength': 2, 'maxLength': 50, 'example': '홍길동'}, 'email': {'type': 'string', 'format': 'email', 'example': 'hong@example.com'}, 'phone': {'type': 'string', 'example': '010-1234-5678'}}}, 'UpdateUserRequest': {'type': 'object', 'properties': {'name': {'type': 'string', 'minLength': 2, 'maxLength': 50, 'example': '홍길동 수정'}, 'email': {'type': 'string', 'format': 'email', 'example': 'hong_updated@example.com'}}}, 'ActivityReportRequest': {'type': 'object', 'required': ['status'], 'properties': {'status': {'type': 'string', 'enum': ['active', 'inactive'], 'example': 'active'}, 'photo': {'type': 'string', 'format': 'uri', 'example': 'https://example.com/photo.jpg'}}}, 'AlertRequest': {'type': 'object', 'required': ['userId', 'alertType'], 'properties': {'userId': {'type': 'integer', 'example': 1}, 'alertType': {'type': 'string', 'enum': ['no_activity', 'pattern_change'], 'example': 'no_activity'}, 'message': {'type': 'string', 'example': '사용자가 일정 시간 이상 활동이 없습니다.'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
64,"{'openapi': '3.0.0', 'info': {'title': 'Pet Health Monitoring API', 'version': '1.0.0', 'description': '반려동물의 행동 패턴을 기반으로 건강 이상을 조기 감지하는 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/pets': {'get': {'summary': '반려동물 목록 조회', 'description': '등록된 모든 반려동물 목록을 조회합니다', 'tags': ['Pets'], 'responses': {'200': {'description': '반려동물 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Pet'}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 반려동물 등록', 'description': '새로운 반려동물을 등록합니다', 'tags': ['Pets'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreatePetRequest'}}}}, 'responses': {'201': {'description': '반려동물 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Pet'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/pets/{petId}/health-data': {'post': {'summary': '반려동물 건강 데이터 수집', 'description': '반려동물의 건강 데이터를 수집합니다', 'tags': ['Health Data'], 'parameters': [{'name': 'petId', 'in': 'path', 'required': True, 'description': '반려동물 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/HealthDataRequest'}}}}, 'responses': {'200': {'description': '건강 데이터 수집 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '건강 데이터가 성공적으로 수집되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/pets/{petId}/alerts': {'get': {'summary': '반려동물 건강 이상 알림 조회', 'description': '반려동물의 건강 이상 알림을 조회합니다', 'tags': ['Alerts'], 'parameters': [{'name': 'petId', 'in': 'path', 'required': True, 'description': '반려동물 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '건강 이상 알림 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '404': {'description': '반려동물을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/appointments': {'post': {'summary': '병원 예약', 'description': '반려동물의 병원 예약을 생성합니다', 'tags': ['Appointments'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/AppointmentRequest'}}}}, 'responses': {'201': {'description': '병원 예약 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Appointment'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/chatbot': {'post': {'summary': '수의사 챗봇 상담 요청', 'description': '수의사 챗봇과 상담 요청을 생성합니다', 'tags': ['Chatbot'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ChatbotRequest'}}}}, 'responses': {'200': {'description': '챗봇 상담 요청 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '챗봇 상담 요청이 성공적으로 처리되었습니다'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Pet': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'name': {'type': 'string', 'example': 'Buddy'}, 'species': {'type': 'string', 'example': 'Dog'}, 'breed': {'type': 'string', 'example': 'Golden Retriever'}, 'age': {'type': 'integer', 'example': 5}, 'ownerId': {'type': 'integer', 'example': 1}}}, 'CreatePetRequest': {'type': 'object', 'required': ['name', 'species', 'breed', 'age'], 'properties': {'name': {'type': 'string', 'example': 'Buddy'}, 'species': {'type': 'string', 'example': 'Dog'}, 'breed': {'type': 'string', 'example': 'Golden Retriever'}, 'age': {'type': 'integer', 'example': 5}}}, 'HealthDataRequest': {'type': 'object', 'required': ['movement', 'heartRate', 'sleepDuration'], 'properties': {'movement': {'type': 'number', 'example': 1200}, 'heartRate': {'type': 'integer', 'example': 80}, 'sleepDuration': {'type': 'integer', 'example': 8}}}, 'Alert': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'petId': {'type': 'integer', 'example': 1}, 'message': {'type': 'string', 'example': '이상 징후 발견: 심박수 증가'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'AppointmentRequest': {'type': 'object', 'required': ['petId', 'dateTime'], 'properties': {'petId': {'type': 'integer', 'example': 1}, 'dateTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-20T10:00:00Z'}, 'vetId': {'type': 'integer', 'example': 1}}}, 'Appointment': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'petId': {'type': 'integer', 'example': 1}, 'dateTime': {'type': 'string', 'format': 'date-time', 'example': '2024-01-20T10:00:00Z'}, 'status': {'type': 'string', 'example': 'confirmed'}}}, 'ChatbotRequest': {'type': 'object', 'required': ['petId', 'message'], 'properties': {'petId': {'type': 'integer', 'example': 1}, 'message': {'type': 'string', 'example': '반려동물의 건강 상태에 대해 상담하고 싶습니다.'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
65,"{'openapi': '3.0.0', 'info': {'title': 'Traditional Market Management API', 'version': '1.0.0', 'description': '전통시장 상인의 경영 효율화를 위한 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/sales/predictions': {'get': {'summary': '매출 예측 조회', 'description': '시간대별, 요일별, 계절별 매출 예측을 조회합니다', 'tags': ['Sales Predictions'], 'parameters': [{'name': 'storeId', 'in': 'query', 'required': True, 'description': '상점 ID', 'schema': {'type': 'integer'}}, {'name': 'dateRange', 'in': 'query', 'required': True, 'description': '예측할 날짜 범위 (형식: YYYY-MM-DD, YYYY-MM-DD)', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '매출 예측 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'predictedSales': {'type': 'number', 'example': 1500.0}}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/inventory/alerts': {'get': {'summary': '재고 알림 조회', 'description': '자주 품절되거나 비효율적으로 남는 재고에 대한 알림을 조회합니다', 'tags': ['Inventory Alerts'], 'parameters': [{'name': 'storeId', 'in': 'query', 'required': True, 'description': '상점 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '재고 알림 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'alerts': {'type': 'array', 'items': {'type': 'object', 'properties': {'productId': {'type': 'integer', 'example': 1}, 'productName': {'type': 'string', 'example': '상품 A'}, 'alertType': {'type': 'string', 'example': '품절'}}}}}}}}}, '404': {'description': '상점을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/margin/comparison': {'get': {'summary': '마진율 비교 조회', 'description': '유사 상점과 비교한 마진율을 조회합니다', 'tags': ['Margin Comparison'], 'parameters': [{'name': 'storeId', 'in': 'query', 'required': True, 'description': '상점 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '마진율 비교 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'comparison': {'type': 'array', 'items': {'type': 'object', 'properties': {'competitorStoreId': {'type': 'integer', 'example': 2}, 'competitorStoreName': {'type': 'string', 'example': '상점 B'}, 'marginRate': {'type': 'number', 'example': 25.5}}}}}}}}}, '404': {'description': '상점을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
66,"{'openapi': '3.0.0', 'info': {'title': 'Traffic Safety System API', 'version': '1.0.0', 'description': '운전 중 실시간으로 사고 위험을 분석하고 알림을 제공하는 교통안전 시스템'}, 'servers': [{'url': 'https://api.traffic-safety.com/v1', 'description': 'Production server'}], 'paths': {'/alerts': {'get': {'summary': '실시간 사고 위험 알림 조회', 'description': '운전 중 발생한 사고 위험 알림을 조회합니다.', 'tags': ['Alerts'], 'parameters': [{'name': 'vehicleId', 'in': 'query', 'description': '차량 ID', 'required': True, 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '알림 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '404': {'description': '차량을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/risk-analysis': {'post': {'summary': '사고 위험 분석 요청', 'description': '차량의 센서 및 데이터 기반으로 사고 위험을 분석합니다.', 'tags': ['Risk Analysis'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/RiskAnalysisRequest'}}}}, 'responses': {'200': {'description': '위험 분석 성공', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/RiskAnalysisResponse'}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/accident-prone-areas': {'get': {'summary': '사고 다발 지역 정보 조회', 'description': '사고 다발 지역 정보를 조회합니다.', 'tags': ['Accident Prone Areas'], 'responses': {'200': {'description': '사고 다발 지역 정보 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/AccidentProneArea'}}}}}}}}}}}, 'components': {'schemas': {'Alert': {'type': 'object', 'properties': {'alertId': {'type': 'string', 'example': 'alert_12345'}, 'message': {'type': 'string', 'example': '급정거 감지! 주의하세요.'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'RiskAnalysisRequest': {'type': 'object', 'required': ['vehicleId', 'sensorData'], 'properties': {'vehicleId': {'type': 'string', 'example': 'vehicle_123'}, 'sensorData': {'type': 'object', 'properties': {'speed': {'type': 'number', 'example': 80}, 'distanceToFrontCar': {'type': 'number', 'example': 15}, 'weatherCondition': {'type': 'string', 'example': 'rain'}, 'brakingIntensity': {'type': 'number', 'example': 0.8}}}}}, 'RiskAnalysisResponse': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'riskLevel': {'type': 'string', 'example': 'high'}, 'recommendations': {'type': 'array', 'items': {'type': 'string', 'example': '속도를 줄이세요.'}}}}, 'AccidentProneArea': {'type': 'object', 'properties': {'areaId': {'type': 'string', 'example': 'area_001'}, 'location': {'type': 'string', 'example': '서울특별시 강남구'}, 'accidentCount': {'type': 'integer', 'example': 10}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
67,"{'openapi': '3.0.0', 'info': {'title': 'Complaint Management API', 'version': '1.0.0', 'description': '민원 접수 및 처리 상태 관리 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/complaints': {'get': {'summary': '민원 목록 조회', 'description': '등록된 모든 민원 목록을 조회합니다', 'tags': ['Complaints'], 'parameters': [{'name': 'page', 'in': 'query', 'description': '페이지 번호', 'required': False, 'schema': {'type': 'integer', 'default': 1}}, {'name': 'limit', 'in': 'query', 'description': '페이지당 항목 수', 'required': False, 'schema': {'type': 'integer', 'default': 10}}], 'responses': {'200': {'description': '민원 목록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Complaint'}}, 'pagination': {'$ref': '#/components/schemas/Pagination'}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'post': {'summary': '새 민원 접수', 'description': '새로운 민원을 접수합니다', 'tags': ['Complaints'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateComplaintRequest'}}}}, 'responses': {'201': {'description': '민원 접수 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Complaint'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/complaints/{complaintId}': {'get': {'summary': '특정 민원 조회', 'description': '민원 ID로 특정 민원 정보를 조회합니다', 'tags': ['Complaints'], 'parameters': [{'name': 'complaintId', 'in': 'path', 'required': True, 'description': '민원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '민원 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Complaint'}}}}}}, '404': {'description': '민원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'put': {'summary': '민원 정보 수정', 'description': '민원 정보를 수정합니다', 'tags': ['Complaints'], 'parameters': [{'name': 'complaintId', 'in': 'path', 'required': True, 'description': '민원 ID', 'schema': {'type': 'integer'}}], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/UpdateComplaintRequest'}}}}, 'responses': {'200': {'description': '민원 정보 수정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Complaint'}}}}}}, '404': {'description': '민원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}, 'delete': {'summary': '민원 삭제', 'description': '민원을 삭제합니다', 'tags': ['Complaints'], 'parameters': [{'name': 'complaintId', 'in': 'path', 'required': True, 'description': '민원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '민원 삭제 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '민원이 성공적으로 삭제되었습니다'}}}}}}, '404': {'description': '민원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/complaints/{complaintId}/assign': {'post': {'summary': '민원 자동 배정', 'description': '민원을 긴급도 및 처리 부서에 따라 자동으로 배정합니다', 'tags': ['Complaints'], 'parameters': [{'name': 'complaintId', 'in': 'path', 'required': True, 'description': '민원 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '민원 배정 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'message': {'type': 'string', 'example': '민원이 성공적으로 배정되었습니다'}}}}}}, '404': {'description': '민원을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/analytics': {'get': {'summary': '민원 분석 데이터 조회', 'description': '민원 처리 소요 시간, 부서별 대응률, 재민원 발생률 등의 분석 데이터를 조회합니다', 'tags': ['Analytics'], 'responses': {'200': {'description': '분석 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/AnalyticsData'}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'Complaint': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'type': {'type': 'string', 'example': '환경 민원'}, 'description': {'type': 'string', 'example': '도로에 쓰레기가 쌓여 있습니다.'}, 'status': {'type': 'string', 'example': '접수'}, 'assignedDepartment': {'type': 'string', 'example': '환경부'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateComplaintRequest': {'type': 'object', 'required': ['type', 'description'], 'properties': {'type': {'type': 'string', 'example': '환경 민원'}, 'description': {'type': 'string', 'example': '도로에 쓰레기가 쌓여 있습니다.'}}}, 'UpdateComplaintRequest': {'type': 'object', 'properties': {'type': {'type': 'string', 'example': '환경 민원'}, 'description': {'type': 'string', 'example': '도로에 쓰레기가 쌓여 있습니다.'}, 'status': {'type': 'string', 'example': '처리 중'}}}, 'Pagination': {'type': 'object', 'properties': {'currentPage': {'type': 'integer', 'example': 1}, 'totalPages': {'type': 'integer', 'example': 10}, 'totalItems': {'type': 'integer', 'example': 100}, 'itemsPerPage': {'type': 'integer', 'example': 10}}}, 'AnalyticsData': {'type': 'object', 'properties': {'averageProcessingTime': {'type': 'number', 'example': 5.5}, 'departmentResponseRates': {'type': 'object', 'additionalProperties': {'type': 'number'}}, 'reComplaintRate': {'type': 'number', 'example': 0.15}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}, 'securitySchemes': {'bearerAuth': {'type': 'http', 'scheme': 'bearer', 'bearerFormat': 'JWT'}}}, 'security': [{'bearerAuth': []}]}"
68,"{'openapi': '3.0.0', 'info': {'title': 'Real-time Speech Recognition and Visualization API', 'version': '1.0.0', 'description': '청각 장애인을 위한 실시간 음성 인식 자막 생성 및 시각화 API'}, 'servers': [{'url': 'https://api.example.com/v1', 'description': 'Production server'}], 'paths': {'/transcriptions': {'post': {'summary': '음성 인식 및 자막 생성', 'description': '사용자의 음성을 실시간으로 텍스트로 변환하고 시각화합니다.', 'tags': ['Transcriptions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'audioStream': {'type': 'string', 'format': 'binary', 'description': '실시간 음성 데이터 스트림'}, 'sessionId': {'type': 'string', 'description': '세션 ID'}}, 'required': ['audioStream', 'sessionId']}}}, 'responses': {'200': {'description': '음성 인식 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'transcription': {'type': 'string', 'example': '안녕하세요, 오늘 날씨는 어떻습니까?'}, 'visualization': {'type': 'object', 'properties': {'emotion': {'type': 'string', 'example': 'happy'}, 'tone': {'type': 'string', 'example': 'neutral'}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/transcriptions/{sessionId}': {'get': {'summary': '세션 기록 조회', 'description': '저장된 세션의 음성 인식 기록을 조회합니다.', 'tags': ['Transcriptions'], 'parameters': [{'name': 'sessionId', 'in': 'path', 'required': True, 'description': '세션 ID', 'schema': {'type': 'string'}}], 'responses': {'200': {'description': '세션 기록 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'transcription': {'type': 'array', 'items': {'type': 'object', 'properties': {'text': {'type': 'string', 'example': '안녕하세요, 오늘 날씨는 어떻습니까?'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'visualization': {'type': 'object', 'properties': {'emotion': {'type': 'string', 'example': 'happy'}, 'tone': {'type': 'string', 'example': 'neutral'}}}}}}}}}}}, '404': {'description': '세션을 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/users': {'post': {'summary': '사용자 등록', 'description': '새로운 사용자를 등록합니다.', 'tags': ['Users'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/CreateUserRequest'}}}}, 'responses': {'201': {'description': '사용자 등록 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/User'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'User': {'type': 'object', 'properties': {'id': {'type': 'integer', 'example': 1}, 'username': {'type': 'string', 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}, 'updatedAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'CreateUserRequest': {'type': 'object', 'required': ['username', 'email'], 'properties': {'username': {'type': 'string', 'minLength': 3, 'maxLength': 50, 'example': 'john_doe'}, 'email': {'type': 'string', 'format': 'email', 'example': 'john@example.com'}, 'password': {'type': 'string', 'minLength': 8, 'example': 'password123'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
69,"{'openapi': '3.0.0', 'info': {'title': 'Festival Crowd Management API', 'version': '1.0.0', 'description': '관람객의 이동 경로와 체류 데이터를 실시간 분석하는 API'}, 'servers': [{'url': 'https://api.festivalmanagement.com/v1', 'description': 'Production server'}], 'paths': {'/crowd-data': {'get': {'summary': '실시간 혼잡도 데이터 조회', 'description': '현재 혼잡도 데이터를 조회합니다.', 'tags': ['Crowd Management'], 'responses': {'200': {'description': '혼잡도 데이터 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/CrowdDensity'}}}}}}}, '500': {'description': '서버 오류', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/recommended-paths': {'get': {'summary': '추천 동선 조회', 'description': '혼잡하지 않은 부스를 피한 추천 동선을 조회합니다.', 'tags': ['Navigation'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '추천 동선 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Path'}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/alerts': {'get': {'summary': '이벤트 알림 조회', 'description': '사용자에게 전송된 이벤트 알림을 조회합니다.', 'tags': ['Notifications'], 'parameters': [{'name': 'userId', 'in': 'query', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '이벤트 알림 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'$ref': '#/components/schemas/Alert'}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}, '/reports': {'post': {'summary': '행사 종료 후 분석 리포트 생성', 'description': '행사 종료 후 분석 리포트를 생성합니다.', 'tags': ['Reports'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ReportRequest'}}}}, 'responses': {'201': {'description': '리포트 생성 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'$ref': '#/components/schemas/Report'}}}}}}, '400': {'description': '잘못된 요청 데이터', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, 'components': {'schemas': {'CrowdDensity': {'type': 'object', 'properties': {'location': {'type': 'string', 'example': '부스 A'}, 'density': {'type': 'integer', 'example': 50}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Path': {'type': 'object', 'properties': {'steps': {'type': 'array', 'items': {'type': 'string', 'example': '부스 B'}}}}, 'Alert': {'type': 'object', 'properties': {'message': {'type': 'string', 'example': '부스 C에서 특별 이벤트가 진행됩니다.'}, 'timestamp': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'ReportRequest': {'type': 'object', 'properties': {'eventId': {'type': 'integer', 'example': 1}, 'data': {'type': 'string', 'example': '혼잡도 및 방문객 흐름 분석'}}}, 'Report': {'type': 'object', 'properties': {'reportId': {'type': 'integer', 'example': 1}, 'status': {'type': 'string', 'example': '생성 완료'}, 'createdAt': {'type': 'string', 'format': 'date-time', 'example': '2024-01-15T10:30:00Z'}}}, 'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
70,"{'openapi': '3.0.0', 'info': {'title': 'Emotional Management Platform API', 'version': '1.0.0', 'description': '청소년의 감정 상태를 분석하고 상담 자원을 연결해주는 API'}, 'servers': [{'url': 'https://api.emotionalmanagement.com/v1', 'description': 'Production server'}], 'paths': {'/emotions/analyze': {'post': {'summary': '감정 상태 분석', 'description': 'SNS나 일기 앱에 작성된 텍스트를 분석하여 감정 상태를 파악합니다.', 'tags': ['Emotions'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'text': {'type': 'string', 'example': '오늘 학교에서 친구와 다퉜다.'}}}}}, 'responses': {'200': {'description': '감정 분석 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'emotions': {'type': 'array', 'items': {'type': 'string', 'example': 'anger'}}, 'severity': {'type': 'string', 'example': 'high'}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/counseling/recommend': {'post': {'summary': '상담 자원 추천', 'description': '감정 상태에 따라 적절한 상담 자원을 추천합니다.', 'tags': ['Counseling'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'emotions': {'type': 'array', 'items': {'type': 'string', 'example': 'depression'}}}}}}, 'responses': {'200': {'description': '상담 자원 추천 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'resourceId': {'type': 'integer', 'example': 1}, 'resourceName': {'type': 'string', 'example': '디지털 상담소'}, 'description': {'type': 'string', 'example': '우울증 상담을 위한 디지털 상담소입니다.'}}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/users/{userId}/emotion-graph': {'get': {'summary': '감정 변화 그래프 조회', 'description': '사용자의 감정 변화 그래프를 조회합니다.', 'tags': ['Users'], 'parameters': [{'name': 'userId', 'in': 'path', 'required': True, 'description': '사용자 ID', 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': '감정 변화 그래프 조회 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'object', 'properties': {'graphData': {'type': 'array', 'items': {'type': 'object', 'properties': {'date': {'type': 'string', 'format': 'date', 'example': '2024-01-15'}, 'emotion': {'type': 'string', 'example': 'anger'}, 'severity': {'type': 'integer', 'example': 8}}}}}}}}}}, '404': {'description': '사용자를 찾을 수 없음', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}, '/stories/recommend': {'post': {'summary': '유사 상황 이야기 추천', 'description': '유사한 상황을 겪은 또래들의 이야기를 추천합니다.', 'tags': ['Stories'], 'requestBody': {'required': True, 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'emotion': {'type': 'string', 'example': 'anxiety'}}}}}, 'responses': {'200': {'description': '이야기 추천 성공', 'content': {'application/json': {'schema': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'success'}, 'data': {'type': 'array', 'items': {'type': 'object', 'properties': {'storyId': {'type': 'integer', 'example': 1}, 'title': {'type': 'string', 'example': '내가 겪은 불안한 순간'}, 'content': {'type': 'string', 'example': '나는 시험을 앞두고 매우 불안했다...'}}}}}}}}}, '400': {'description': '잘못된 요청', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/Error'}}}}}}}}}, 'components': {'schemas': {'Error': {'type': 'object', 'properties': {'status': {'type': 'string', 'example': 'error'}, 'message': {'type': 'string', 'example': '오류가 발생했습니다'}, 'code': {'type': 'string', 'example': 'VALIDATION_ERROR'}}}}}}"
